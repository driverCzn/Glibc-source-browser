<def f='glibc_src_2.23/sunrpc/svc_udp.c' l='120' ll='198' type='SVCXPRT * svcudp_bufcreate(int sock, u_int sendsz, u_int recvsz)'/>
<use f='glibc_src_2.23/sunrpc/svc_udp.c' l='200' c='__EI_svcudp_bufcreate'/>
<use f='glibc_src_2.23/sunrpc/svc_udp.c' l='200' c='__EI_svcudp_bufcreate'/>
<use f='glibc_src_2.23/sunrpc/svc_udp.c' l='208' u='c' c='__GI_svcudp_create'/>
<doc f='glibc_src_2.23/sunrpc/svc_udp.c' l='107'>/*
 * Usage:
 *      xprt = svcudp_create(sock);
 *
 * If sock&lt;0 then a socket is created, else sock is used.
 * If the socket, sock is not bound to a port then svcudp_create
 * binds it to an arbitrary port.  In any (successful) case,
 * xprt-&gt;xp_sock is the registered socket number and xprt-&gt;xp_port is the
 * associated port number.
 * Once *xprt is initialized, it is registered as a transporter;
 * see (svc.h, xprt_register).
 * The routines returns NULL if a problem occurred.
 */</doc>
