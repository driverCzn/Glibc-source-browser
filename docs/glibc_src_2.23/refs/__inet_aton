<dec f='glibc_src_2.23/include/arpa/inet.h' l='4' type='int __inet_aton(const char * __cp, struct in_addr * __inp)'/>
<use f='glibc_src_2.23/nss/digits_dots.c' l='148' u='c' c='__nss_hostname_digits_dots'/>
<use f='glibc_src_2.23/resolv/inet_addr.c' l='96' u='c' c='__inet_addr'/>
<def f='glibc_src_2.23/resolv/inet_addr.c' l='109' ll='224' type='int __inet_aton(const char * cp, struct in_addr * addr)'/>
<use f='glibc_src_2.23/resolv/inet_addr.c' l='225' c='inet_aton'/>
<doc f='glibc_src_2.23/resolv/inet_addr.c' l='102'>/*
 * Check whether &quot;cp&quot; is a valid ascii representation
 * of an Internet address and convert to a binary address.
 * Returns 1 if the address is valid, 0 if not.
 * This replaces inet_addr, the return value from which
 * cannot distinguish between failure and a local broadcast address.
 */</doc>
<use f='glibc_src_2.23/resolv/res_init.c' l='299' u='c' c='__res_vinit'/>
<use f='glibc_src_2.23/resolv/res_init.c' l='374' u='c' c='__res_vinit'/>
<use f='glibc_src_2.23/resolv/res_init.c' l='384' u='c' c='__res_vinit'/>
