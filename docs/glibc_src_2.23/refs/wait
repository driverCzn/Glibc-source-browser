<def f='glibc_src_2.23/bits/waitstatus.h' l='66' ll='97'/>
<use f='glibc_src_2.23/stdlib/stdlib.h' l='69'/>
<size>4</size>
<mbr r='wait::w_status' o='0' t='int'/>
<mbr r='wait::__wait_terminated' o='0' t='struct (anonymous struct at /home/fp/glibc/glibc_src/bits/waitstatus.h:69:5)'/>
<mbr r='wait::__wait_stopped' o='0' t='struct (anonymous struct at /home/fp/glibc/glibc_src/bits/waitstatus.h:84:5)'/>
<dec f='glibc_src_2.23/posix/sys/wait.h' l='113' type='__pid_t wait(__WAIT_STATUS __stat_loc)'/>
<doc f='glibc_src_2.23/posix/sys/wait.h' l='108'>/* Wait for a child to die.  When one does, put its status in *STAT_LOC
   and return its process ID.  For errors, return (pid_t) -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='glibc_src_2.23/nscd/nscd.c' l='631' u='c' c='monitor_child'/>
<def f='glibc_src_2.23/sysdeps/unix/sysv/linux/wait.c' l='35' macro='1' type='__pid_t wait(int * )'/>
