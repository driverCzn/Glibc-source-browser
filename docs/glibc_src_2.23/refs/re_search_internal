<dec f='glibc_src_2.23/posix/regexec.c' l='40' type='reg_errcode_t re_search_internal(const regex_t * preg, const char * string, int length, int start, int range, int stop, size_t nmatch, regmatch_t * pmatch, int eflags)'/>
<use f='glibc_src_2.23/posix/regexec.c' l='245' u='c' c='__regexec'/>
<use f='glibc_src_2.23/posix/regexec.c' l='248' u='c' c='__regexec'/>
<use f='glibc_src_2.23/posix/regexec.c' l='448' u='c' c='re_search_stub'/>
<def f='glibc_src_2.23/posix/regexec.c' l='607' ll='928' type='reg_errcode_t re_search_internal(const regex_t * preg, const char * string, int length, int start, int range, int stop, size_t nmatch, regmatch_t * pmatch, int eflags)'/>
<doc f='glibc_src_2.23/posix/regexec.c' l='598'>/* Searches for a compiled pattern PREG in the string STRING, whose
   length is LENGTH.  NMATCH, PMATCH, and EFLAGS have the same
   mingings with regexec.  START, and RANGE have the same meanings
   with re_search.
   Return REG_NOERROR if we find a match, and REG_NOMATCH if not,
   otherwise return the error code.
   Note: We assume front end functions already check ranges.
   (START + RANGE &gt;= 0 &amp;&amp; START + RANGE &lt;= LENGTH)  */</doc>
