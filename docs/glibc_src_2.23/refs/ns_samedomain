<dec f='glibc_src_2.23/resolv/arpa/nameser.h' l='524' type='int ns_samedomain(const char * , const char * )'/>
<def f='glibc_src_2.23/resolv/ns_samedomain.c' l='47' ll='139' type='int ns_samedomain(const char * a, const char * b)'/>
<use f='glibc_src_2.23/resolv/ns_samedomain.c' l='147' u='c' c='ns_subdomain'/>
<doc f='glibc_src_2.23/resolv/ns_samedomain.c' l='28'>/*%
 *	Check whether a name belongs to a domain.
 *
 * Inputs:
 *\li	a - the domain whose ancestry is being verified
 *\li	b - the potential ancestor we&apos;re checking against
 *
 * Return:
 *\li	boolean - is a at or below b?
 *
 * Notes:
 *\li	Trailing dots are first removed from name and domain.
 *	Always compare complete subdomains, not only whether the
 *	domain name is the trailing string of the given name.
 *
 *\li	&quot;host.foobar.top&quot; lies in &quot;foobar.top&quot; and in &quot;top&quot; and in &quot;&quot;
 *	but NOT in &quot;bar.top&quot;
 */</doc>
