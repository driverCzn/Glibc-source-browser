<def f='glibc_src_2.23/elf/tlsdeschtab.h' l='140' ll='156' type='int _dl_tlsdesc_resolve_early_return_p(volatile struct tlsdesc * td, void * caller)'/>
<use f='glibc_src_2.23/sysdeps/x86_64/tlsdesc.c' l='41' u='c' c='_dl_tlsdesc_resolve_rela_fixup'/>
<doc f='glibc_src_2.23/elf/tlsdeschtab.h' l='133'>/* The idea of the following two functions is to stop multiple threads
   from attempting to resolve the same TLS descriptor without busy
   waiting.  Ideally, we should be able to release the lock right
   after changing td-&gt;entry, and then using say a condition variable
   or a futex wake to wake up any waiting threads, but let&apos;s try to
   avoid introducing such dependencies.  */</doc>
