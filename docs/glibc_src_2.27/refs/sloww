<dec f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='136' type='double sloww(double x, double dx, double orig, _Bool shift_quadrant)'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='342' u='c' c='do_sincos_1'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='578' u='c' c='__cos_local'/>
<def f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='695' ll='747' type='double sloww(double x, double dx, double orig, _Bool shift_quadrant)'/>
<doc f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='690'>/* Compute sin(x + dx) where X is small enough to use Taylor series around zero
   and (x + dx) in the first or third quarter of the unit circle.  ORIG is the
   original value of X for computing error of the result.  If the result is not
   accurate enough, the routine calls mpsin or dubsin.  SHIFT_QUADRANT rotates
   the unit circle by 1 to compute the cosine instead of sine.  */</doc>
