<dec f='glibc_src_2.27/posix/regex_internal.h' l='380' type='void build_wcs_buffer(re_string_t * pstr)'/>
<use f='glibc_src_2.27/posix/regex_internal.c' l='109' u='c' c='re_string_construct'/>
<def f='glibc_src_2.27/posix/regex_internal.c' l='199' ll='262' type='void build_wcs_buffer(re_string_t * pstr)'/>
<use f='glibc_src_2.27/posix/regex_internal.c' l='810' u='c' c='re_string_reconstruct'/>
<use f='glibc_src_2.27/posix/regexec.c' l='4071' u='c' c='extend_buffers'/>
<doc f='glibc_src_2.27/posix/regex_internal.c' l='188'>/* Build wide character buffer PSTR-&gt;WCS.
   If the byte sequence of the string are:
     &lt;mb1&gt;(0), &lt;mb1&gt;(1), &lt;mb2&gt;(0), &lt;mb2&gt;(1), &lt;sb3&gt;
   Then wide character buffer will be:
     &lt;wc1&gt;   , WEOF    , &lt;wc2&gt;   , WEOF    , &lt;wc3&gt;
   We use WEOF for padding, they indicate that the position isn&apos;t
   a first byte of a multibyte character.

   Note that this function assumes PSTR-&gt;VALID_LEN elements are already
   built and starts from PSTR-&gt;VALID_LEN.  */</doc>
