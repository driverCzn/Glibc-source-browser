<def f='glibc_src_2.27/posix/regcomp.c' l='2002' ll='2082' type='int peek_token_bracket(re_token_t * token, re_string_t * input, reg_syntax_t syntax)'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3067' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3082' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3115' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3128' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3157' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3342' u='c' c='parse_bracket_element'/>
<doc f='glibc_src_2.27/posix/regcomp.c' l='1999'>/* Peek a token from INPUT, and return the length of the token.
   We must not use this function out of bracket expressions.  */</doc>
