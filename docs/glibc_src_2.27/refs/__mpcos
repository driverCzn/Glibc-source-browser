<dec f='glibc_src_2.27/sysdeps/generic/math_private.h' l='264' type='double __mpcos(double __x, double __dx, _Bool __range_reduce)'/>
<dec f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='132' type='double __mpcos(double x, double dx, _Bool reduce_range)'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='746' u='c' c='sloww'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='774' u='c' c='sloww1'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='804' u='c' c='sloww2'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='834' u='c' c='bsloww'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='862' u='c' c='bsloww1'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='890' u='c' c='bsloww2'/>
<use f='glibc_src_2.27/sysdeps/ieee754/dbl-64/s_sin.c' l='912' u='c' c='cslow2'/>
<def f='glibc_src_2.27/sysdeps/ieee754/dbl-64/sincos32.c' l='254' ll='308' type='double __mpcos(double x, double dx, _Bool reduce_range)'/>
<doc f='glibc_src_2.27/sysdeps/ieee754/dbl-64/sincos32.c' l='251'>/* Compute cos() of double-length number (X + DX) as Multi Precision number and
   return result as double.  If REDUCE_RANGE is true, X is assumed to be the
   original input and DX is ignored.  */</doc>
