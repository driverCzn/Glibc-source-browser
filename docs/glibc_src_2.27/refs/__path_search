<dec f='glibc_src_2.27/include/stdio.h' l='78' type='int __path_search(char * __tmpl, size_t __tmpl_len, const char * __dir, const char * __pfx, int __try_tempdir)'/>
<doc f='glibc_src_2.27/include/stdio.h' l='77'>/* Generate a unique file name (and possibly open it).  */</doc>
<def f='glibc_src_2.27/sysdeps/posix/tempname.c' l='116' ll='171' type='int __path_search(char * tmpl, size_t tmpl_len, const char * dir, const char * pfx, int try_tmpdir)'/>
<doc f='glibc_src_2.27/sysdeps/posix/tempname.c' l='110'>/* Path search algorithm, for tmpnam, tmpfile, etc.  If DIR is
   non-null and exists, uses it; otherwise uses the first of $TMPDIR,
   P_tmpdir, /tmp that exists.  Copies into TMPL a template suitable
   for use with mk[s]temp.  Will fail (-1) if DIR is non-null and
   doesn&apos;t exist, none of the searched dirs exists, or there&apos;s not
   enough space in TMPL. */</doc>
<use f='glibc_src_2.27/stdio-common/tempnam.c' l='33' u='c' c='tempnam'/>
<use f='glibc_src_2.27/stdio-common/tmpfile.c' l='51' u='c' c='__new_tmpfile'/>
<use f='glibc_src_2.27/stdio-common/tmpnam.c' l='37' u='c' c='tmpnam'/>
<use f='glibc_src_2.27/stdio-common/tmpnam_r.c' l='28' u='c' c='tmpnam_r'/>
