<def f='glibc_src_2.27/posix/regcomp.c' l='1755' ll='1759' type='void fetch_token(re_token_t * result, re_string_t * input, reg_syntax_t syntax)'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2106' u='c' c='parse'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2144' u='c' c='parse_reg_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2244' u='c' c='parse_expression'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2299' u='c' c='parse_expression'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2367' u='c' c='parse_expression'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2410' u='c' c='parse_expression'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2454' u='c' c='parse_sub_exp'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='2551' u='c' c='parse_dup_op'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='3700' u='c' c='fetch_number'/>
<doc f='glibc_src_2.27/posix/regcomp.c' l='1752'>/* Fetch a token from INPUT.
   We must not use this function inside bracket expressions.  */</doc>
