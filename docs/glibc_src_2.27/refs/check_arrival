<dec f='glibc_src_2.27/posix/regexec.c' l='142' type='reg_errcode_t check_arrival(re_match_context_t * mctx, state_array_t * path, int top_node, int top_str, int last_node, int last_str, int type)'/>
<use f='glibc_src_2.27/posix/regexec.c' l='2748' u='c' c='get_subexp'/>
<use f='glibc_src_2.27/posix/regexec.c' l='2780' u='c' c='get_subexp_sub'/>
<def f='glibc_src_2.27/posix/regexec.c' l='2822' ll='2973' type='reg_errcode_t check_arrival(re_match_context_t * mctx, state_array_t * path, int top_node, int top_str, int last_node, int last_str, int type)'/>
<doc f='glibc_src_2.27/posix/regexec.c' l='2817'>/* Check whether the node TOP_NODE at TOP_STR can arrive to the node
   LAST_NODE at LAST_STR.  We record the path onto PATH since it will be
   heavily reused.
   Return REG_NOERROR if it can arrive, or REG_NOMATCH otherwise.  */</doc>
