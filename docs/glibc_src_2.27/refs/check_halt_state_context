<dec f='glibc_src_2.27/posix/regexec.c' l='56' type='int check_halt_state_context(const re_match_context_t * mctx, const re_dfastate_t * state, int idx)'/>
<use f='glibc_src_2.27/posix/regexec.c' l='805' u='c' c='re_search_internal'/>
<use f='glibc_src_2.27/posix/regexec.c' l='957' u='c' c='prune_impossible_nodes'/>
<use f='glibc_src_2.27/posix/regexec.c' l='1088' u='c' c='check_matching'/>
<use f='glibc_src_2.27/posix/regexec.c' l='1149' u='c' c='check_matching'/>
<def f='glibc_src_2.27/posix/regexec.c' l='1190' ll='1204' type='int check_halt_state_context(const re_match_context_t * mctx, const re_dfastate_t * state, int idx)'/>
<doc f='glibc_src_2.27/posix/regexec.c' l='1186'>/* Check the halt state STATE match the current context.
   Return 0 if not match, if the node, STATE has, is a halt node and
   match the context, return the node.  */</doc>
