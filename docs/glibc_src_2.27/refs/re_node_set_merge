<def f='glibc_src_2.27/posix/regex_internal.c' l='1184' ll='1261' type='reg_errcode_t re_node_set_merge(re_node_set * dest, const re_node_set * src)'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='1032' u='c' c='create_initial_state'/>
<use f='glibc_src_2.27/posix/regcomp.c' l='1726' u='c' c='calc_eclosure_iter'/>
<use f='glibc_src_2.27/posix/regexec.c' l='1786' u='c' c='add_epsilon_src_nodes'/>
<use f='glibc_src_2.27/posix/regexec.c' l='2913' u='c' c='check_arrival'/>
<use f='glibc_src_2.27/posix/regexec.c' l='3019' u='c' c='check_arrival_add_next_nodes'/>
<use f='glibc_src_2.27/posix/regexec.c' l='3088' u='c' c='check_arrival_expand_ecl'/>
<use f='glibc_src_2.27/posix/regexec.c' l='3197' u='c' c='expand_bkref_cache'/>
<use f='glibc_src_2.27/posix/regexec.c' l='3356' u='c' c='build_trtable'/>
<doc f='glibc_src_2.27/posix/regex_internal.c' l='1181'>/* Calculate the union set of the sets DEST and SRC. And store it to
   DEST. Return value indicate the error code or REG_NOERROR if succeeded.  */</doc>
