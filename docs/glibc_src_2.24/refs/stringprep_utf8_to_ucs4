<dec f='glibc_src_2.24/libidn/stringprep.h' l='189' type='uint32_t * stringprep_utf8_to_ucs4(const char * str, ssize_t len, size_t * items_written)'/>
<use f='glibc_src_2.24/libidn/idna.c' l='141' u='c' c='idna_to_ascii_4i'/>
<use f='glibc_src_2.24/libidn/idna.c' l='553' u='c' c='idna_to_ascii_8z'/>
<use f='glibc_src_2.24/libidn/idna.c' l='688' u='c' c='idna_to_unicode_8z4z'/>
<def f='glibc_src_2.24/libidn/nfkc.c' l='975' ll='979' type='uint32_t * stringprep_utf8_to_ucs4(const char * str, ssize_t len, size_t * items_written)'/>
<doc f='glibc_src_2.24/libidn/nfkc.c' l='960'>/**
 * stringprep_utf8_to_ucs4:
 * @str: a UTF-8 encoded string
 * @len: the maximum length of @str to use. If @len &lt; 0, then
 *       the string is nul-terminated.
 * @items_written: location to store the number of characters in the
 *                 result, or %NULL.
 *
 * Convert a string from UTF-8 to a 32-bit fixed width
 * representation as UCS-4, assuming valid UTF-8 input.
 * This function does no error checking on the input.
 *
 * Return value: a pointer to a newly allocated UCS-4 string.
 *               This value must be freed with free().
 **/</doc>
<use f='glibc_src_2.24/libidn/stringprep.c' l='369' u='c' c='stringprep'/>
