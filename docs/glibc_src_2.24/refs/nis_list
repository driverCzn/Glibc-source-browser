<dec f='glibc_src_2.24/nis/rpcsvc/nislib.h' l='113' type='nis_result * nis_list(const_nis_name __name, unsigned int __flags, int (*)(const_nis_name, const nis_object *, const void *) __callback, const void * __userdata)'/>
<doc f='glibc_src_2.24/nis/rpcsvc/nislib.h' l='63'>/* nis_tables: These functions are used to search and modify NIS+ tables.
 *
 * nis_list (table_name, flags, callback(table_name, obj, userdata), userdata)
 *           search a table in the NIS+ namespace.
 *    const nis_name table_name: indexed name ([xx=yy],table.dir)
 *    unsigned int flags: logically ORing one or more flags (FOLLOW_LINKS,
 *                      [FOLLOW_PATH], HARD_LOOKUP, [ALL_RESULTS], [NO_CACHE],
 *                      MASTER_ONLY, EXPAND_NAME, RETURN_RESULT)
 *    callback(): callback is an optional pointer to a function that will
 *                process the ENTRY type objects that are returned from the
 *                search. If this pointer is NULL, then all entries that match
 *                the search criteria are returned in the nis_result structure,
 *                otherwise  this  function  will  be  called once for each
 *                entry returned.
 *    void *userdata: passed to callback function along with the returned
 *                    entry object.
 *
 * nis_add_entry (table_name, obj, flags) will add the NIS+ object to the
 *                                        NIS+ table_name.
 *    const nis_name table_name
 *    const nis_object *obj
 *    unsigned int flags: 0, ADD_OVERWRITE, RETURN_RESULT
 *
 * nis_modify_entry (name, obj, flags) modifies an object identified by name.
 *    const nis_name name: object identifier
 *    const nis_object *obj: should point to an entry with the EN_MODIFIED
 *                           flag set in each column that contains new
 *                           information.
 *    unsigned int flags: 0, MOD_SAMEOBJ, RETURN_RESULT
 *
 * nis_remove_entry (table_name, obj, flags) removes a set of entries
 *                                 identified by table_name from the table.
 *    const nis_name table_name: indexed NIS+ name
 *    const nis_object *obj: if obj is non-null, it is presumed to point to
 *                           a cached copy of the entry. When the removal is
 *                           attempted, and the object that would be removed
 *                           is not the same as the cached object pointed to
 *                           by object then the operation will fail with an
 *                           NIS_NOTSAMEOBJ error
 *    unsigned int flags: 0, REM_MULTIPLE
 *
 * nis_first_entry (table_name) fetches entries from a table one at a time.
 *    const nis_name table_name
 *
 * nis_next_entry (table_name, cookie) retrieves the &quot;next&quot; entry from a
 *                                     table specified by table_name.
 *    const nis_name table_name:
 *    const netobj *cookie: The value of cookie from the nis_result structure
 *                          form the previous call.
 */</doc>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-alias.c' l='179' u='c' c='internal_setaliasent'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-alias.c' l='305' u='c' c='_nss_nisplus_getaliasbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-ethers.c' l='258' u='c' c='_nss_nisplus_gethostton_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-ethers.c' l='325' u='c' c='_nss_nisplus_getntohost_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-grp.c' l='311' u='c' c='_nss_nisplus_getgrnam_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-grp.c' l='366' u='c' c='_nss_nisplus_getgrgid_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-hosts.c' l='406' u='c' c='internal_gethostbyname2_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-hosts.c' l='431' u='c' c='internal_gethostbyname2_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-hosts.c' l='537' u='c' c='_nss_nisplus_gethostbyaddr_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-initgroups.c' l='62' u='c' c='_nss_nisplus_initgroups_dyn'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-netgrp.c' l='161' u='c' c='_nss_nisplus_setnetgrent'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-network.c' l='340' u='c' c='_nss_nisplus_getnetbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-network.c' l='368' u='c' c='_nss_nisplus_getnetbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-network.c' l='441' u='c' c='_nss_nisplus_getnetbyaddr_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-proto.c' l='314' u='c' c='_nss_nisplus_getprotobyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-proto.c' l='341' u='c' c='_nss_nisplus_getprotobyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-proto.c' l='403' u='c' c='_nss_nisplus_getprotobynumber_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-publickey.c' l='73' u='c' c='_nss_nisplus_getpublickey'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-publickey.c' l='157' u='c' c='_nss_nisplus_getsecretkey'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-publickey.c' l='281' u='c' c='_nss_nisplus_netname2user'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-publickey.c' l='355' u='c' c='_nss_nisplus_netname2user'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-pwd.c' l='312' u='c' c='_nss_nisplus_getpwnam_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-pwd.c' l='371' u='c' c='_nss_nisplus_getpwuid_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-rpc.c' l='316' u='c' c='_nss_nisplus_getrpcbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-rpc.c' l='344' u='c' c='_nss_nisplus_getrpcbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-rpc.c' l='405' u='c' c='_nss_nisplus_getrpcbynumber_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-service.c' l='323' u='c' c='_nss_nisplus_getservbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-service.c' l='353' u='c' c='_nss_nisplus_getservbyname_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-service.c' l='423' u='c' c='_nss_nisplus_getservbyport_r'/>
<use f='glibc_src_2.24/nis/nss_nisplus/nisplus-spwd.c' l='184' u='c' c='_nss_nisplus_getspnam_r'/>
