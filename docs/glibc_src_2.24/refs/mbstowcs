<dec f='glibc_src_2.24/stdlib/stdlib.h' l='834' type='size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n)'/>
<doc f='glibc_src_2.24/stdlib/stdlib.h' l='833'>/* Convert a multibyte string to a wide char string.  */</doc>
<def f='glibc_src_2.24/stdlib/bits/stdlib.h' l='112' ll='127' macro='1' type='size_t mbstowcs(wchar_t *restrict __dst, const char *restrict __src, size_t __len)'/>
<def f='glibc_src_2.24/stdlib/mbstowcs.c' l='31' ll='39' type='size_t mbstowcs(wchar_t * pwcs, const char * s, size_t n)'/>
<doc f='glibc_src_2.24/stdlib/mbstowcs.c' l='23'>/* Convert the string of multibyte characters in S to `wchar_t&apos;s in
   PWCS, writing no more than N.  Return the number written,
   or (size_t) -1 if an invalid multibyte character is encountered.

   Attention: this function should NEVER be intentionally used.
   The interface is completely stupid.  The state is shared between
   all conversion functions.  You should use instead the restartable
   version `mbsrtowcs&apos;.  */</doc>
<dec f='include/stdlib.h' l='930' type='size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n)'/>
<doc f='include/stdlib.h' l='929'>/* Convert a multibyte string to a wide char string.  */</doc>
