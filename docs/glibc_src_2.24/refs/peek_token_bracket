<def f='glibc_src_2.24/posix/regcomp.c' l='2000' ll='2081' type='int peek_token_bracket(re_token_t * token, re_string_t * input, reg_syntax_t syntax)'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='3068' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='3083' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='3116' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='3129' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='3158' u='c' c='parse_bracket_exp'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='3343' u='c' c='parse_bracket_element'/>
<doc f='glibc_src_2.24/posix/regcomp.c' l='1997'>/* Peek a token from INPUT, and return the length of the token.
   We must not use this function out of bracket expressions.  */</doc>
