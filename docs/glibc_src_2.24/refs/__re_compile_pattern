<dec f='glibc_src_2.24/include/regex.h' l='8' type='const char * __re_compile_pattern(const char * pattern, size_t length, struct re_pattern_buffer * buffer)'/>
<def f='glibc_src_2.24/posix/regcomp.c' l='219' macro='1' type='const char * __re_compile_pattern(const char * pattern, size_t length, struct re_pattern_buffer * bufp)'/>
<use f='glibc_src_2.24/posix/regcomp.c' l='239' c='re_compile_pattern'/>
<doc f='glibc_src_2.24/posix/regcomp.c' l='211'>/* re_compile_pattern is the GNU regular expression compiler: it
   compiles PATTERN (of length LENGTH) and puts the result in BUFP.
   Returns 0 if the pattern was valid, otherwise an error string.

   Assumes the &apos;allocated&apos; (and perhaps &apos;buffer&apos;) and &apos;translate&apos; fields
   are set in BUFP on entry.  */</doc>
