<use f='glibc_src_2.24/resolv/res_data.c' l='146' u='c' c='__res_close'/>
<def f='glibc_src_2.24/resolv/res_init.c' l='515' ll='535' type='void __res_iclose(res_state statp, _Bool free_addr)'/>
<use f='glibc_src_2.24/resolv/res_init.c' l='541' u='c' c='__res_nclose'/>
<use f='glibc_src_2.24/resolv/res_init.c' l='554' u='c' c='res_thread_freeres'/>
<doc f='glibc_src_2.24/resolv/res_init.c' l='508'>/*
 * This routine is for closing the socket if a virtual circuit is used and
 * the program wants to close it.  This provides support for endhostent()
 * which expects to close the socket.
 *
 * This routine is not expected to be user visible.
 */</doc>
<use f='glibc_src_2.24/resolv/res_libc.c' l='72' u='c' c='__res_init'/>
<use f='glibc_src_2.24/resolv/res_libc.c' l='98' u='c' c='__res_maybe_init'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='412' u='c' c='__libc_res_nsend'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='572' u='c' c='__libc_res_nsend'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='610' u='c' c='__libc_res_nsend'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='653' u='c' c='close_and_return_error'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='772' u='c' c='send_vc'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='779' u='c' c='send_vc'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='852' u='c' c='send_vc'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='1020' u='c' c='reopen'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='1183' u='c' c='send_dg'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='1473' u='c' c='send_dg'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='1492' u='c' c='send_dg'/>
<use f='glibc_src_2.24/resolv/res_send.c' l='1509' u='c' c='send_dg'/>
<use f='glibc_src_2.24/support/resolv_test.c' l='1105' u='c' c='resolv_test_start'/>
