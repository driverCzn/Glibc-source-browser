<dec f='glibc_src_2.24/stdlib/stdlib.h' l='826' type='int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n)'/>
<doc f='glibc_src_2.24/stdlib/stdlib.h' l='824'>/* Return the length of the given multibyte character,
   putting its `wchar_t&apos; representation in *PWC.  */</doc>
<def f='glibc_src_2.24/stdlib/mbtowc.c' l='33' ll='72' type='int mbtowc(wchar_t * pwc, const char * s, size_t n)'/>
<doc f='glibc_src_2.24/stdlib/mbtowc.c' l='25'>/* Convert the multibyte character at S, which is no longer
   than N characters, to its `wchar_t&apos; representation, placing
   this n *PWC and returning its length.

   Attention: this function should NEVER be intentionally used.
   The interface is completely stupid.  The state is shared between
   all conversion functions.  You should use instead the restartable
   version `mbrtowc&apos;.  */</doc>
<dec f='include/stdlib.h' l='922' type='int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n)'/>
<doc f='include/stdlib.h' l='920'>/* Return the length of the given multibyte character,
   putting its `wchar_t&apos; representation in *PWC.  */</doc>
