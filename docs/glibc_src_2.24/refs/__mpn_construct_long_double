<dec f='glibc_src_2.24/include/gmp.h' l='23' type='long double __mpn_construct_long_double(mp_srcptr frac_ptr, int expt, int sign)'/>
<def f='glibc_src_2.24/sysdeps/ieee754/ldbl-96/mpn2ldbl.c' l='28' ll='46' type='long double __mpn_construct_long_double(mp_srcptr frac_ptr, int expt, int sign)'/>
<doc f='glibc_src_2.24/sysdeps/ieee754/ldbl-96/mpn2ldbl.c' l='24'>/* Convert a multi-precision integer of the needed number of bits (64 for
   long double) and an integral power of two to a `long double&apos; in IEEE854
   extended-precision format.  */</doc>
<dec f='glibc_src_2.24/stdlib/strtod_l.c' l='129' macro='1' type='long double __mpn_construct_long_double(mp_srcptr mpn, int exponent, int negative)'/>
<use f='glibc_src_2.24/stdlib/strtod_l.c' l='328' macro='1' u='c' c='round_and_return'/>
<doc f='glibc_src_2.24/stdlib/strtod_l.c' l='127'>/* Function to construct a floating point number from an MP integer
   containing the fraction bits, a base 2 exponent, and a sign flag.  */</doc>
