<dec f='glibc_src_2.24/math/bits/mathcalls.h' l='103' macro='1' type='double __frexp(double __x, int * __exponent)'/>
<use f='glibc_src_2.24/sysdeps/ieee754/dbl-64/e_gamma_r.c' l='91' u='c' c='gamma_positive'/>
<use f='glibc_src_2.24/sysdeps/ieee754/dbl-64/s_cbrt.c' l='45' u='c' c='__cbrt'/>
<def f='glibc_src_2.24/sysdeps/ieee754/dbl-64/wordsize-64/s_frexp.c' l='34' ll='64' type='double __frexp(double x, int * eptr)'/>
<use f='glibc_src_2.24/sysdeps/ieee754/dbl-64/wordsize-64/s_frexp.c' l='65' c='frexp'/>
<doc f='glibc_src_2.24/sysdeps/ieee754/dbl-64/wordsize-64/s_frexp.c' l='23'>/*
 * for non-zero, finite x
 *	x = frexp(arg,&amp;exp);
 * return a double fp quantity x such that 0.5 &lt;= |x| &lt;1.0
 * and the corresponding binary exponent &quot;exp&quot;. That is
 *	arg = x*2^exp.
 * If arg is inf, 0.0, or NaN, then frexp(arg,&amp;exp) returns arg
 * with *exp=0.
 */</doc>
