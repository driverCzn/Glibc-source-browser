<dec f='glibc_src_2.26/inet/ifaddrs.h' l='66' type='int getifaddrs(struct ifaddrs ** __ifap)'/>
<dec f='glibc_src_2.26/include/ifaddrs.h' l='9' type='int getifaddrs(struct ifaddrs ** )'/>
<use f='glibc_src_2.26/include/ifaddrs.h' l='9' c='getifaddrs'/>
<doc f='glibc_src_2.26/inet/ifaddrs.h' l='60'>/* Create a linked list of `struct ifaddrs&apos; structures, one for each
   network interface on the host machine.  If successful, store the
   list in *IFAP and return 0.  On errors, return -1 and set `errno&apos;.

   The storage returned in *IFAP is allocated dynamically and can
   only be properly freed by passing it to `freeifaddrs&apos;.  */</doc>
