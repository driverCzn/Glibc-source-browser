<dec f='glibc_src_2.26/sysdeps/unix/sysdep.h' l='57'/>
<doc f='glibc_src_2.26/sysdeps/unix/sysdep.h' l='54'>/* Issue a syscall defined by syscall number plus any other argument required.
   It is similar to INTERNAL_SYSCALL macro, but without the need to pass the
   expected argument number as second parameter.  */</doc>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/not-errno.h' l='28' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/fcntl.c' l='38' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/posix_fadvise64.c' l='55' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/posix_fallocate.c' l='30' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/pthread_kill.c' l='55' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/pthread_sigqueue.c' l='66' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/pthread-pids.h' l='29' u='c'/>
<use f='glibc_src_2.26/nptl/pthread_cancel.c' l='72' u='c'/>
<use f='glibc_src_2.26/nptl/allocatestack.c' l='1092' u='c'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/createthread.c' l='131' u='c'/>
