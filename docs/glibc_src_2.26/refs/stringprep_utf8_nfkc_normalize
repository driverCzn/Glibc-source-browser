<dec f='glibc_src_2.26/libidn/stringprep.h' l='195' type='char * stringprep_utf8_nfkc_normalize(const char * str, ssize_t len)'/>
<def f='glibc_src_2.26/libidn/nfkc.c' l='1029' ll='1033' type='char * stringprep_utf8_nfkc_normalize(const char * str, ssize_t len)'/>
<doc f='glibc_src_2.26/libidn/nfkc.c' l='1007'>/**
 * stringprep_utf8_nfkc_normalize:
 * @str: a UTF-8 encoded string.
 * @len: length of @str, in bytes, or -1 if @str is nul-terminated.
 *
 * Converts a string into canonical form, standardizing
 * such issues as whether a character with an accent
 * is represented as a base character and combining
 * accent or as a single precomposed character.
 *
 * The normalization mode is NFKC (ALL COMPOSE).  It standardizes
 * differences that do not affect the text content, such as the
 * above-mentioned accent representation. It standardizes the
 * &quot;compatibility&quot; characters in Unicode, such as SUPERSCRIPT THREE to
 * the standard forms (in this case DIGIT THREE). Formatting
 * information may be lost but for most text operations such
 * characters should be considered the same. It returns a result with
 * composed forms rather than a maximally decomposed form.
 *
 * Return value: a newly allocated string, that is the
 *   NFKC normalized form of @str.
 **/</doc>
