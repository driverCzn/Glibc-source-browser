<dec f='glibc_src_2.26/sysdeps/nptl/futex-internal.h' l='153' type='int futex_reltimed_wait(unsigned int * futex_word, unsigned int expected, const struct timespec * reltime, int private)'/>
<def f='glibc_src_2.26/sysdeps/unix/sysv/linux/futex-internal.h' l='110' ll='132' type='int futex_reltimed_wait(unsigned int * futex_word, unsigned int expected, const struct timespec * reltime, int private)'/>
<doc f='glibc_src_2.26/sysdeps/unix/sysv/linux/futex-internal.h' l='109'>/* See sysdeps/nptl/futex-internal.h for details.  */</doc>
<doc f='glibc_src_2.26/sysdeps/nptl/futex-internal.h' l='144'>/* Like futex_wait, but will eventually time out (i.e., stop being
   blocked) after the duration of time provided (i.e., RELTIME) has
   passed.  The caller must provide a normalized RELTIME.  RELTIME can also
   equal NULL, in which case this function behaves equivalent to futex_wait.

   Returns the same values as futex_wait under those same conditions;
   additionally, returns ETIMEDOUT if the timeout expired.
   */</doc>
<use f='glibc_src_2.26/resolv/gai_suspend.c' l='86' macro='1' u='c' c='gai_suspend'/>
<use f='glibc_src_2.26/resolv/getaddrinfo_a.c' l='128' macro='1' u='c' c='getaddrinfo_a'/>
<use f='glibc_src_2.26/sysdeps/pthread/aio_suspend.c' l='101' macro='1' u='c' c='do_aio_misc_wait'/>
<use f='glibc_src_2.26/sysdeps/pthread/lio_listio.c' l='152' macro='1' u='c' c='lio_listio_internal'/>
