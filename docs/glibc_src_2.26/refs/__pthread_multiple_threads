<dec f='glibc_src_2.26/nptl/pthreadP.h' l='401' type='int'/>
<doc f='glibc_src_2.26/nptl/pthreadP.h' l='398'>/* Variable set to a nonzero value either if more than one thread runs or ran,
   or if a single-threaded process is trying to cancel itself.  See
   nptl/descr.h for more context on the single-threaded process case.  */</doc>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/accept.c' l='26' macro='1' u='r' c='__libc_accept'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/connect.c' l='26' macro='1' u='r' c='__libc_connect'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/msgrcv.c' l='28' macro='1' u='r' c='__libc_msgrcv'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/msgsnd.c' l='27' macro='1' u='r' c='__libc_msgsnd'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/nanosleep.c' l='27' macro='1' u='r' c='__nanosleep'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/pause.c' l='30' macro='1' u='r' c='__libc_pause'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/recv.c' l='28' macro='1' u='r' c='__libc_recv'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/recvfrom.c' l='27' macro='1' u='r' c='__libc_recvfrom'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/recvmsg.c' l='28' macro='1' u='r' c='__libc_recvmsg'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/send.c' l='28' macro='1' u='r' c='__libc_send'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/sendmsg.c' l='28' macro='1' u='r' c='__libc_sendmsg'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/sendto.c' l='27' macro='1' u='r' c='__libc_sendto'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/sigsuspend.c' l='26' macro='1' u='r' c='__sigsuspend'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/sigwait.c' l='91' macro='1' u='r' c='__sigwait'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/tcdrain.c' l='28' macro='1' u='r' c='__libc_tcdrain'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/wait.c' l='29' macro='1' u='r' c='__libc_wait'/>
<use f='glibc_src_2.26/sysdeps/unix/sysv/linux/waitpid.c' l='29' macro='1' u='r' c='__waitpid'/>
<use f='glibc_src_2.26/nptl/pthread_cancel.c' l='92' u='w' c='__pthread_cancel'/>
<use f='glibc_src_2.26/nptl/allocatestack.c' l='487' u='w' c='allocate_stack'/>
<use f='glibc_src_2.26/nptl/allocatestack.c' l='611' u='w' c='allocate_stack'/>
<def f='glibc_src_2.26/nptl/vars.c' l='37' type='int'/>
<doc f='glibc_src_2.26/nptl/vars.c' l='34'>/* Variable set to a nonzero value either if more than one thread runs or ran,
   or if a single-threaded process is trying to cancel itself.  See
   nptl/descr.h for more context on the single-threaded process case.  */</doc>
