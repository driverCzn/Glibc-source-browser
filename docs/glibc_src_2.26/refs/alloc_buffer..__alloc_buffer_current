<dec f='glibc_src_2.26/include/alloc_buffer.h' l='104' type='uintptr_t'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='150' u='w' c='alloc_buffer_mark_failed'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='158' u='r' c='alloc_buffer_size'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='165' u='r' c='alloc_buffer_has_failed'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='173' u='r' c='alloc_buffer_add_byte'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='175' u='r' c='alloc_buffer_add_byte'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='176' u='w' c='alloc_buffer_add_byte'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='192' u='r' c='alloc_buffer_alloc_bytes'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='193' u='w' c='alloc_buffer_alloc_bytes'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='251' u='r' c='__alloc_buffer_alloc'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='258' u='w' c='__alloc_buffer_alloc'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='283' u='r' c='__alloc_buffer_next'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='285' u='r' c='__alloc_buffer_next'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='290' u='w' c='__alloc_buffer_next'/>
<use f='glibc_src_2.26/include/alloc_buffer.h' l='352' u='r' c='alloc_buffer_copy_string'/>
<use f='glibc_src_2.26/malloc/alloc_buffer_alloc_array.c' l='27' u='r' c='__libc_alloc_buffer_alloc_array'/>
<use f='glibc_src_2.26/malloc/alloc_buffer_alloc_array.c' l='38' u='w' c='__libc_alloc_buffer_alloc_array'/>
<offset>0</offset>
<doc f='glibc_src_2.26/include/alloc_buffer.h' l='100'>/* uintptr_t is used here to simplify the alignment code, and to
     avoid issues undefined subtractions if the buffer covers more
     than half of the address space (which would result in differences
     which could not be represented as a ptrdiff_t value).  */</doc>
<use f='glibc_src_2.26/malloc/alloc_buffer_allocate.c' l='30' u='w' c='__libc_alloc_buffer_allocate'/>
