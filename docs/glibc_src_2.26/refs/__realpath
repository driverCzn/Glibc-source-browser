<dec f='glibc_src_2.26/include/stdlib.h' l='77' type='char * __realpath(const char * __name, char * __resolved)'/>
<use f='glibc_src_2.26/debug/realpath_chk.c' l='31' u='c' c='__realpath_chk'/>
<def f='glibc_src_2.26/stdlib/canonicalize.c' l='42' ll='220' type='char * __realpath(const char * name, char * resolved)'/>
<use f='glibc_src_2.26/stdlib/canonicalize.c' l='235' u='c' c='__old_realpath'/>
<use f='glibc_src_2.26/stdlib/canonicalize.c' l='244' u='c' c='__canonicalize_file_name'/>
<doc f='glibc_src_2.26/stdlib/canonicalize.c' l='31'>/* Return the canonical absolute name of file NAME.  A canonical name
   does not contain any `.&apos;, `..&apos; components nor any repeated path
   separators (&apos;/&apos;) or symlinks.  All path components must exist.  If
   RESOLVED is null, the result is malloc&apos;d; otherwise, if the
   canonical name is PATH_MAX chars or more, returns null with `errno&apos;
   set to ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  If the name cannot be resolved and
   RESOLVED is non-NULL, it contains the path of the first component
   that cannot be resolved.  If the path can be resolved, RESOLVED
   holds the same value as the value returned.  */</doc>
