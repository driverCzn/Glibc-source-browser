<def f='glibc_src_2.26/malloc/hooks.c' l='68' type='int'/>
<use f='glibc_src_2.26/malloc/hooks.c' l='74' u='r' c='__malloc_check_init'/>
<use f='glibc_src_2.26/malloc/hooks.c' l='76' u='w' c='__malloc_check_init'/>
<doc f='glibc_src_2.26/malloc/hooks.c' l='55'>/* A flag that is set by malloc_set_state, to signal that malloc checking
   must not be enabled on the request from the user (via the MALLOC_CHECK_
   environment variable).  It is reset by __malloc_check_init to tell
   malloc_set_state that the user has requested malloc checking.

   The purpose of this flag is to make sure that malloc checking is not
   enabled when the heap to be restored was constructed without malloc
   checking, and thus does not contain the required magic bytes.
   Otherwise the heap would be corrupted by calls to free and realloc.  If
   it turns out that the heap was created with malloc checking and the
   user has requested it malloc_set_state just calls __malloc_check_init
   again to enable it.  On the other hand, reusing such a heap without
   further malloc checking is safe.  */</doc>
