<dec f='glibc_src_2.26/include/stdlib.h' l='86' type='int __add_to_environ(const char * name, const char * value, const char * combines, int replace)'/>
<use f='glibc_src_2.26/stdlib/putenv.c' l='77' u='c' c='putenv'/>
<def f='glibc_src_2.26/stdlib/setenv.c' l='115' ll='248' type='int __add_to_environ(const char * name, const char * value, const char * combined, int replace)'/>
<use f='glibc_src_2.26/stdlib/setenv.c' l='259' u='c' c='__setenv'/>
<doc f='glibc_src_2.26/stdlib/setenv.c' l='109'>/* This function is used by `setenv&apos; and `putenv&apos;.  The difference between
   the two functions is that for the former must create a new string which
   is then placed in the environment, while the argument of `putenv&apos;
   must be used directly.  This is all complicated by the fact that we try
   to reuse values once generated for a `setenv&apos; call since we can never
   free the strings.  */</doc>
