<dec f='glibc_src_2.26/elf/dynamic-link.h' l='46' type='int _dl_try_allocate_static_tls(struct link_map * map)'/>
<use f='glibc_src_2.26/sysdeps/x86_64/tlsdesc.c' l='90' macro='1' u='c' c='_dl_tlsdesc_resolve_rela_fixup'/>
<def f='glibc_src_2.26/elf/dl-reloc.c' l='47' ll='112' type='int _dl_try_allocate_static_tls(struct link_map * map)'/>
<use f='glibc_src_2.26/elf/dl-reloc.c' l='119' u='c' c='_dl_allocate_static_tls'/>
<doc f='glibc_src_2.26/elf/dl-reloc.c' l='39'>/* We are trying to perform a static TLS relocation in MAP, but it was
   dynamically loaded.  This can only work if there is enough surplus in
   the static TLS area already allocated for each running thread.  If this
   object&apos;s TLS segment is too big to fit, we fail.  If it fits,
   we set MAP-&gt;l_tls_offset and return.
   This function intentionally does not return any value but signals error
   directly, as static TLS should be rare and code handling it should
   not be inlined as much as possible.  */</doc>
