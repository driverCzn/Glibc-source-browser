<dec f='glibc_src_2.26/string/argz.h' l='152' type='char * __argz_next(const char *restrict __argz, size_t __argz_len, const char *restrict __entry)'/>
<def f='glibc_src_2.26/string/argz.h' l='158' ll='171' macro='1' type='char * __argz_next(const char * __argz, size_t __argz_len, const char * __entry)'/>
<use f='glibc_src_2.26/string/argz.h' l='176' u='c' c='argz_next'/>
<use f='glibc_src_2.26/intl/l10nflist.c' l='282' u='c' c='_nl_make_l10nflist'/>
<doc f='glibc_src_2.26/string/argz.h' l='138'>/* Returns the next entry in ARGZ &amp; ARGZ_LEN after ENTRY, or NULL if there
   are no more.  If entry is NULL, then the first entry is returned.  This
   behavior allows two convenient iteration styles:

    char *entry = 0;
    while ((entry = argz_next (argz, argz_len, entry)))
      ...;

   or

    char *entry;
    for (entry = argz; entry; entry = argz_next (argz, argz_len, entry))
      ...;
*/</doc>
<def f='glibc_src_2.26/string/argz-next.c' l='23' ll='38' type='char * __argz_next(const char * argz, size_t argz_len, const char * entry)'/>
<use f='glibc_src_2.26/string/argz-next.c' l='39' c='argz_next'/>
