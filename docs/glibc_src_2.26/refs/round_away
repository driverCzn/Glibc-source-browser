<def f='glibc_src_2.26/include/rounding-mode.h' l='42' ll='63' type='_Bool round_away(_Bool negative, _Bool last_digit_odd, _Bool half_bit, _Bool more_bits, int mode)'/>
<use f='glibc_src_2.26/stdio-common/printf_fphex.c' l='350' u='c' c='__printf_fphex'/>
<doc f='glibc_src_2.26/include/rounding-mode.h' l='32'>/* Return true if a number should be rounded away from zero in
   rounding mode MODE, false otherwise.  NEGATIVE is true if the
   number is negative, false otherwise.  LAST_DIGIT_ODD is true if the
   last digit of the truncated value (last bit for binary) is odd,
   false otherwise.  HALF_BIT is true if the number is at least half
   way from the truncated value to the next value with the
   least-significant digit in the same place, false otherwise.
   MORE_BITS is true if the number is not exactly equal to the
   truncated value or the half-way value, false otherwise.  */</doc>
<use f='glibc_src_2.26/stdio-common/printf_fp.c' l='997' u='c' c='__printf_fp_l'/>
<use f='glibc_src_2.26/stdlib/strtod_l.c' l='250' u='c' c='round_and_return'/>
<use f='glibc_src_2.26/stdlib/strtod_l.c' l='300' u='c' c='round_and_return'/>
