<def f='glibc_src_2.26/elf/dl-load.c' l='87' ll='96'/>
<use f='glibc_src_2.26/elf/dl-load.c' l='862' c='_dl_map_object_from_fd'/>
<use f='glibc_src_2.26/elf/dl-load.c' l='1447' c='open_verify'/>
<use f='glibc_src_2.26/elf/dl-load.c' l='1753' c='open_path'/>
<use f='glibc_src_2.26/elf/dl-load.c' l='1910' c='_dl_map_object'/>
<size>840</size>
<doc f='glibc_src_2.26/elf/dl-load.c' l='73'>/* Type for the buffer we put the ELF header and hopefully the program
   header.  This buffer does not really have to be too large.  In most
   cases the program header follows the ELF header directly.  If this
   is not the case all bets are off and we can make the header
   arbitrarily large and still won&apos;t get it read.  This means the only
   question is how large are the ELF and program header combined.  The
   ELF header 32-bit files is 52 bytes long and in 64-bit files is 64
   bytes long.  Each program header entry is again 32 and 56 bytes
   long respectively.  I.e., even with a file which has 10 program
   header entries we only have to read 372B/624B respectively.  Add to
   this a bit of margin for program notes and reading 512B and 832B
   for 32-bit and 64-bit files respecitvely is enough.  If this
   heuristic should really fail for some file the code in
   `_dl_map_object_from_fd&apos; knows how to recover.  */</doc>
