<dec f='glibc_src_2.28/include/regex.h' l='39' type='int __regexec(const regex_t * __preg, const char * __string, size_t __nmatch, regmatch_t * __pmatch, int __eflags)'/>
<use f='glibc_src_2.28/misc/regexp.c' l='57' u='c' c='step'/>
<use f='glibc_src_2.28/misc/regexp.c' l='80' u='c' c='advance'/>
<def f='glibc_src_2.28/posix/regexec.c' l='192' macro='1' type='int __regexec(const regex_t *restrict preg, const char *restrict string, size_t nmatch, regmatch_t * pmatch, int eflags)'/>
<use f='glibc_src_2.28/posix/regexec.c' l='225' c='__EI___regexec'/>
<use f='glibc_src_2.28/posix/regexec.c' l='225' c='__EI___regexec'/>
<use f='glibc_src_2.28/posix/regexec.c' l='231' c='__compat_regexec'/>
<use f='glibc_src_2.28/posix/regexec.c' l='239' macro='1' u='c' c='__compat_regexec'/>
<use f='glibc_src_2.28/posix/regexec.c' l='567' macro='1' u='c' c='re_exec'/>
<doc f='glibc_src_2.28/posix/regexec.c' l='177'>/* regexec searches for a given pattern, specified by PREG, in the
   string STRING.

   If NMATCH is zero or REG_NOSUB was set in the cflags argument to
   &apos;regcomp&apos;, we ignore PMATCH.  Otherwise, we assume PMATCH has at
   least NMATCH elements, and we set them to the offsets of the
   corresponding matched substrings.

   EFLAGS specifies &quot;execution flags&quot; which affect matching: if
   REG_NOTBOL is set, then ^ does not match at the beginning of the
   string; if REG_NOTEOL is set, then $ does not match at the end.

   We return 0 if we find a match and REG_NOMATCH if not.  */</doc>
<use f='glibc_src_2.28/stdlib/rpmatch.c' l='49' u='c' c='try'/>
