<dec f='glibc_src_2.28/crypt/crypt.h' l='63' type='char * crypt_r(const char * __phrase, const char * __salt, struct crypt_data *restrict __data)'/>
<def f='glibc_src_2.28/crypt/crypt-entry.c' l='156' macro='1' type='char * crypt_r(const char * , const char * , struct crypt_data *restrict )'/>
<doc f='glibc_src_2.28/crypt/crypt.h' l='57'>/* Thread-safe version of &apos;crypt&apos;.
   DATA must point to a &apos;struct crypt_data&apos; allocated by the caller.
   Before the first call to &apos;crypt_r&apos; with a new &apos;struct crypt_data&apos;,
   that object must be initialized to all zeroes.  The pointer
   returned, if not NULL, will point within DATA.  (It will still be
   overwritten by the next call to &apos;crypt_r&apos; with the same DATA.)  */</doc>
