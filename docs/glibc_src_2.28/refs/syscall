<dec f='glibc_src_2.28/posix/unistd.h' l='1056' type='long syscall(long __sysno)'/>
<doc f='glibc_src_2.28/posix/unistd.h' l='1046'>/* Invoke `system call&apos; number SYSNO, passing it the remaining arguments.
   This is completely system-dependent, and not often useful.

   In Unix, `syscall&apos; sets `errno&apos; for all errors and most calls return -1
   for errors; in many systems you cannot pass arguments or get return
   values for all system calls (`pipe&apos;, `fork&apos;, and `getppid&apos; typically
   among them).

   In Mach, all system calls take normal arguments and always return an
   error code (zero for success).  */</doc>
<def f='glibc_src_2.28/sysdeps/unix/sysv/linux/umount2.S' l='8' macro='1' type='int'/>
<def f='glibc_src_2.28/sysdeps/unix/sysv/linux/x86_64/syscall.S' l='29' macro='1' type='int'/>
