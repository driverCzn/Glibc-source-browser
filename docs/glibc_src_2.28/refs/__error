<dec f='glibc_src_2.28/misc/error.c' l='74' type='void __error(int status, int errnum, const char * message)'/>
<def f='glibc_src_2.28/misc/error.c' l='292' ll='330' type='void __error(int status, int errnum, const char * message)'/>
<use f='glibc_src_2.28/misc/error.c' l='408' c='error'/>
<doc f='glibc_src_2.28/misc/error.c' l='72'>/* In GNU libc we want do not want to use the common name &apos;error&apos; directly.
   Instead make it a weak alias.  */</doc>
<doc f='glibc_src_2.28/misc/error.c' l='288'>/* Print the program name and error message MESSAGE, which is a printf-style
   format string with optional args.
   If ERRNUM is nonzero, print its corresponding system error message.
   Exit with status STATUS if it is nonzero.  */</doc>
