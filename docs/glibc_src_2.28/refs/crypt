<dec f='glibc_src_2.28/posix/unistd.h' l='1124' type='char * crypt(const char * __key, const char * __salt)'/>
<doc f='glibc_src_2.28/posix/unistd.h' l='1119'>/* One-way hash PHRASE, returning a string suitable for storage in the
   user database.  SALT selects the one-way function to use, and
   ensures that no two users&apos; hashes are the same, even if they use
   the same passphrase.  The return value points to static storage
   which will be overwritten by the next call to crypt.  */</doc>
<dec f='glibc_src_2.28/crypt/crypt.h' l='36' type='char * crypt(const char * __phrase, const char * __salt)'/>
<def f='glibc_src_2.28/crypt/crypt-entry.c' l='158' ll='178' type='char * crypt(const char * key, const char * salt)'/>
<use f='glibc_src_2.28/crypt/crypt-entry.c' l='181' c='fcrypt'/>
<doc f='glibc_src_2.28/crypt/crypt.h' l='31'>/* One-way hash PHRASE, returning a string suitable for storage in the
   user database.  SALT selects the one-way function to use, and
   ensures that no two users&apos; hashes are the same, even if they use
   the same passphrase.  The return value points to static storage
   which will be overwritten by the next call to crypt.  */</doc>
