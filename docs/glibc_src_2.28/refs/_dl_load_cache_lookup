<dec f='glibc_src_2.28/sysdeps/generic/ldsodefs.h' l='1024' type='char * _dl_load_cache_lookup(const char * name)'/>
<doc f='glibc_src_2.28/sysdeps/generic/ldsodefs.h' l='1022'>/* Look up NAME in ld.so.cache and return the file name stored there,
   or null if none is found.  Caller must free returned string.  */</doc>
<def f='glibc_src_2.28/elf/dl-cache.c' l='182' ll='307' type='char * _dl_load_cache_lookup(const char * name)'/>
<doc f='glibc_src_2.28/elf/dl-cache.c' l='175'>/* Look up NAME in ld.so.cache and return the file name stored there, or null
   if none is found.  The cache is loaded if it was not already.  If loading
   the cache previously failed there will be no more attempts to load it.
   The caller is responsible for freeing the returned string.  The ld.so.cache
   may be unmapped at any time by a completing recursive dlopen and
   this function must take care that it does not return references to
   any data in the mapping.  */</doc>
<use f='glibc_src_2.28/elf/dl-load.c' l='2106' u='c' c='_dl_map_object'/>
