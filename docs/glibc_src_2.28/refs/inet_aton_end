<def f='glibc_src_2.28/resolv/inet_addr.c' l='105' ll='179' type='int inet_aton_end(const char * cp, struct in_addr * addr, const char ** endp)'/>
<use f='glibc_src_2.28/resolv/inet_addr.c' l='187' u='c' c='__inet_aton_exact'/>
<use f='glibc_src_2.28/resolv/inet_addr.c' l='202' u='c' c='__inet_aton_ignore_trailing'/>
<use f='glibc_src_2.28/resolv/inet_addr.c' l='213' u='c' c='__inet_addr'/>
<doc f='glibc_src_2.28/resolv/inet_addr.c' l='99'>/* Check whether &quot;cp&quot; is a valid ASCII representation of an IPv4
   Internet address and convert it to a binary address.  Returns 1 if
   the address is valid, 0 if not.  This replaces inet_addr, the
   return value from which cannot distinguish between failure and a
   local broadcast address.  Write a pointer to the first
   non-converted character to *endp.  */</doc>
