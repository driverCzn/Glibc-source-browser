<dec f='glibc_src_2.28/include/time.h' l='59' type='time_t __mktime_internal(struct tm * __tp, struct tm *(*)(const time_t *, struct tm *) __func, time_t * __offset)'/>
<doc f='glibc_src_2.28/include/time.h' l='56'>/* Subroutine of `mktime&apos;.  Return the `time_t&apos; representation of TP and
   normalize TP, given that a `struct tm *&apos; maps to a `time_t&apos; as performed
   by FUNC.  Keep track of next guess for time_t offset in *OFFSET.  */</doc>
<def f='glibc_src_2.28/time/mktime.c' l='349' ll='571' type='time_t __mktime_internal(struct tm * tp, struct tm *(*)(const time_t *, struct tm *) convert, time_t * offset)'/>
<use f='glibc_src_2.28/time/mktime.c' l='591' u='c' c='__GI_mktime'/>
<doc f='glibc_src_2.28/time/mktime.c' l='343'>/* Convert *TP to a time_t value, inverting
   the monotonic and mostly-unit-linear conversion function CONVERT.
   Use *OFFSET to keep track of a guess at the offset of the result,
   compared to what the result would be for UTC without leap seconds.
   If *OFFSET&apos;s guess is correct, only one CONVERT call is needed.
   This function is external because it is used also by timegm.c.  */</doc>
<use f='glibc_src_2.28/time/timegm.c' l='46' u='c' c='timegm'/>
