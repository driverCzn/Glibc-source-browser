<def f='glibc_src_2.28/elf/dl-sysdep-open.h' l='38' ll='43' type='char * _dl_sysdep_open_object(const char * name, size_t namelen, int * fd)'/>
<use f='glibc_src_2.28/elf/dl-load.c' l='2086' u='c' c='_dl_map_object'/>
<doc f='glibc_src_2.28/elf/dl-sysdep-open.h' l='25'>/* NAME is a name without slashes, as it appears in a DT_NEEDED entry
   or a dlopen call&apos;s argument or suchlike.  NAMELEN is (strlen (NAME) + 1).

   Find NAME in an OS-dependent fashion, and return its &quot;real&quot; name.
   Optionally fill in *FD with a file descriptor open on that file (or
   else leave its initial value of -1).  The return value is a new
   malloc&apos;d string, which will be free&apos;d by the caller.  If NAME is
   resolved to an actual file that can be opened, then the return
   value should name that file (and if *FD was not set, then a normal
   __open call on that string will be made).  If *FD was set by some
   other means than a normal open and there is no &quot;real&quot; name to use,
   then __strdup (NAME) is fine (modulo error checking).  */</doc>
