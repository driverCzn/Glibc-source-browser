<dec f='glibc_src_2.30/support/check.h' l='135' type='void support_test_compare_failure(const char * file, int line, const char * left_expr, long long left_value, int left_positive, int left_size, const char * right_expr, long long right_value, int right_positive, int right_size)'/>
<doc f='glibc_src_2.30/support/check.h' l='129'>/* Internal implementation of TEST_COMPARE.  LEFT_POSITIVE and
   RIGHT_POSITIVE are used to store the sign separately, so that both
   unsigned long long and long long arguments fit into LEFT_VALUE and
   RIGHT_VALUE, and the function can still print the original value.
   LEFT_SIZE and RIGHT_SIZE specify the size of the argument in bytes,
   for hexadecimal formatting.  */</doc>
<use f='glibc_src_2.30/support/support_descriptor_supports_holes.c' l='57' macro='1' u='c' c='support_descriptor_supports_holes'/>
<use f='glibc_src_2.30/support/support_descriptor_supports_holes.c' l='71' macro='1' u='c' c='support_descriptor_supports_holes'/>
<use f='glibc_src_2.30/support/support_descriptor_supports_holes.c' l='78' macro='1' u='c' c='support_descriptor_supports_holes'/>
<def f='glibc_src_2.30/support/support_test_compare_failure.c' l='37' ll='58' type='void support_test_compare_failure(const char * file, int line, const char * left_expr, long long left_value, int left_positive, int left_size, const char * right_expr, long long right_value, int right_positive, int right_size)'/>
