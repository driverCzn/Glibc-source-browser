<dec f='glibc_src_2.30/include/stdio.h' l='151' type='ssize_t __libc_readline_unlocked(FILE * fp, char * buffer, size_t length)'/>
<dec f='glibc_src_2.30/include/stdio.h' l='152' type='ssize_t __libc_readline_unlocked(FILE * , char * , size_t )'/>
<use f='glibc_src_2.30/include/stdio.h' l='152' c='__libc_readline_unlocked'/>
<doc f='glibc_src_2.30/include/stdio.h' l='141'>/* Read the next line from FP into BUFFER, of LENGTH bytes.  LINE will
   include the line terminator and a NUL terminator.  On success,
   return the length of the line, including the line terminator, but
   excluding the NUL termintor.  On EOF, return zero and write a NUL
   terminator.  On error, return -1 and set errno.  If the total byte
   count (line and both terminators) exceeds LENGTH, return -1 and set
   errno to ERANGE (but do not mark the stream as failed).

   The behavior is undefined if FP is not seekable, or if the stream
   is already in an error state.  */</doc>
<def f='glibc_src_2.30/libio/readline.c' l='89' ll='169' type='ssize_t __libc_readline_unlocked(FILE * fp, char * buffer, size_t buffer_length)'/>
<use f='glibc_src_2.30/libio/readline.c' l='170' c='__EI___libc_readline_unlocked'/>
<use f='glibc_src_2.30/libio/readline.c' l='170' c='__EI___libc_readline_unlocked'/>
<use f='glibc_src_2.30/nss/nss_files/files-XXX.c' l='151' u='c' c='internal_getent'/>
