<dec f='glibc_src_2.30/include/error.h' l='7' type='void __error_internal(int status, int errnum, const char * message, struct __va_list_tag * args, unsigned int mode_flags)'/>
<def f='glibc_src_2.30/misc/error.c' l='235' ll='270' type='void __error_internal(int status, int errnum, const char * message, struct __va_list_tag * args, unsigned int mode_flags)'/>
<use f='glibc_src_2.30/misc/error.c' l='277' u='c' c='__error'/>
<doc f='glibc_src_2.30/misc/error.c' l='231'>/* Print the program name and error message MESSAGE, which is a printf-style
   format string with optional args.
   If ERRNUM is nonzero, print its corresponding system error message.
   Exit with status STATUS if it is nonzero.  */</doc>
