<dec f='glibc_src_2.30/posix/regexec.c' l='55' type='Idx check_halt_state_context(const re_match_context_t * mctx, const re_dfastate_t * state, Idx idx)'/>
<use f='glibc_src_2.30/posix/regexec.c' l='820' u='c' c='re_search_internal'/>
<use f='glibc_src_2.30/posix/regexec.c' l='976' u='c' c='prune_impossible_nodes'/>
<use f='glibc_src_2.30/posix/regexec.c' l='1107' u='c' c='check_matching'/>
<use f='glibc_src_2.30/posix/regexec.c' l='1168' u='c' c='check_matching'/>
<def f='glibc_src_2.30/posix/regexec.c' l='1209' ll='1223' type='Idx check_halt_state_context(const re_match_context_t * mctx, const re_dfastate_t * state, Idx idx)'/>
<doc f='glibc_src_2.30/posix/regexec.c' l='1205'>/* Check the halt state STATE match the current context.
   Return 0 if not match, if the node, STATE has, is a halt node and
   match the context, return the node.  */</doc>
