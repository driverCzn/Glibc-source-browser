<dec f='glibc_src_2.30/malloc/malloc.c' l='629' type='struct mallinfo __libc_mallinfo()'/>
<def f='glibc_src_2.30/malloc/malloc.c' l='4935' ll='4957' type='struct mallinfo __libc_mallinfo()'/>
<use f='glibc_src_2.30/malloc/malloc.c' l='5580' c='__mallinfo'/>
<use f='glibc_src_2.30/malloc/malloc.c' l='5581' c='mallinfo'/>
<doc f='glibc_src_2.30/malloc/malloc.c' l='607'>/*
  mallinfo()
  Returns (by copy) a struct containing various summary statistics:

  arena:     current total non-mmapped bytes allocated from system
  ordblks:   the number of free chunks
  smblks:    the number of fastbin blocks (i.e., small chunks that
	       have been freed but not use resused or consolidated)
  hblks:     current number of mmapped regions
  hblkhd:    total bytes held in mmapped regions
  usmblks:   always 0
  fsmblks:   total bytes held in fastbin blocks
  uordblks:  current total allocated space (normal or mmapped)
  fordblks:  total free space
  keepcost:  the maximum number of bytes that could ideally be released
	       back to system via malloc_trim. (&quot;ideally&quot; means that
	       it ignores page restrictions etc.)

  Because these fields are ints, but internal bookkeeping may
  be kept as longs, the reported values may wrap around zero and
  thus be inaccurate.
*/</doc>
