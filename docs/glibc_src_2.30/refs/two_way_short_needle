<def f='glibc_src_2.30/string/str-two-way.h' l='224' ll='372' type='char * two_way_short_needle(const unsigned char * haystack, size_t haystack_len, const unsigned char * needle, size_t needle_len)'/>
<doc f='glibc_src_2.30/string/str-two-way.h' l='214'>/* Return the first location of non-empty NEEDLE within HAYSTACK, or
   NULL.  HAYSTACK_LEN is the minimum known length of HAYSTACK.  This
   method is optimized for NEEDLE_LEN &lt; LONG_NEEDLE_THRESHOLD.
   Performance is guaranteed to be linear, with an initialization cost
   of 2 * NEEDLE_LEN comparisons.

   If AVAILABLE does not modify HAYSTACK_LEN (as in memmem), then at
   most 2 * HAYSTACK_LEN - NEEDLE_LEN comparisons occur in searching.
   If AVAILABLE modifies HAYSTACK_LEN (as in strstr), then at most 3 *
   HAYSTACK_LEN - NEEDLE_LEN comparisons occur in searching.  */</doc>
<use f='glibc_src_2.30/string/strcasestr.c' l='83' u='c' c='__strcasestr'/>
