<dec f='glibc_src_2.30/resolv/resolv.h' l='224' type='int __res_nmkquery(res_state , int , const char * , int , int , const unsigned char * , int , const unsigned char * , unsigned char * , int )'/>
<def f='glibc_src_2.30/resolv/res_mkquery.c' l='204' macro='1' type='int __res_nmkquery(res_state statp, int op, const char * dname, int class, int type, const unsigned char * data, int datalen, const unsigned char * newrr_in, unsigned char * buf, int buflen)'/>
<doc f='glibc_src_2.30/resolv/res_mkquery.c' l='193'>/* Form all types of queries.  Returns the size of the result or -1 on
   error.

   STATP points to an initialized resolver state.  OP is the opcode of
   the query.  DNAME is the domain.  CLASS and TYPE are the DNS query
   class and type.  DATA can be NULL; otherwise, it is a pointer to a
   domain name which is included in the generated packet (if op ==
   NS_NOTIFY_OP).  BUF must point to the out buffer of BUFLEN bytes.

   DATALEN and NEWRR_IN are currently ignored.  */</doc>
