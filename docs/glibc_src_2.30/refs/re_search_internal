<dec f='glibc_src_2.30/posix/regexec.c' l='34' type='reg_errcode_t re_search_internal(const regex_t * preg, const char * string, Idx length, Idx start, Idx last_start, Idx stop, size_t nmatch, regmatch_t * pmatch, int eflags)'/>
<use f='glibc_src_2.30/posix/regexec.c' l='215' u='c' c='__regexec'/>
<use f='glibc_src_2.30/posix/regexec.c' l='218' u='c' c='__regexec'/>
<use f='glibc_src_2.30/posix/regexec.c' l='425' u='c' c='re_search_stub'/>
<def f='glibc_src_2.30/posix/regexec.c' l='583' ll='917' type='reg_errcode_t re_search_internal(const regex_t * preg, const char * string, Idx length, Idx start, Idx last_start, Idx stop, size_t nmatch, regmatch_t * pmatch, int eflags)'/>
<doc f='glibc_src_2.30/posix/regexec.c' l='574'>/* Searches for a compiled pattern PREG in the string STRING, whose
   length is LENGTH.  NMATCH, PMATCH, and EFLAGS have the same
   meaning as with regexec.  LAST_START is START + RANGE, where
   START and RANGE have the same meaning as with re_search.
   Return REG_NOERROR if we find a match, and REG_NOMATCH if not,
   otherwise return the error code.
   Note: We assume front end functions already check ranges.
   (0 &lt;= LAST_START &amp;&amp; LAST_START &lt;= LENGTH)  */</doc>
