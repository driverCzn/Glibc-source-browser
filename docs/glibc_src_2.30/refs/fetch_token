<def f='glibc_src_2.30/posix/regcomp.c' l='1777' ll='1781' type='void fetch_token(re_token_t * result, re_string_t * input, reg_syntax_t syntax)'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2130' u='c' c='parse'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2169' u='c' c='parse_reg_exp'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2272' u='c' c='parse_expression'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2331' u='c' c='parse_expression'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2401' u='c' c='parse_expression'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2450' u='c' c='parse_expression'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2495' u='c' c='parse_sub_exp'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='2600' u='c' c='parse_dup_op'/>
<use f='glibc_src_2.30/posix/regcomp.c' l='3772' u='c' c='fetch_number'/>
<doc f='glibc_src_2.30/posix/regcomp.c' l='1774'>/* Fetch a token from INPUT.
   We must not use this function inside bracket expressions.  */</doc>
