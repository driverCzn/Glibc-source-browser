<dec f='glibc_src_2.31/include/argz.h' l='27' type='error_t __argz_insert(char **restrict __argz, size_t *restrict __argz_len, char *restrict __before, const char *restrict __entry)'/>
<def f='glibc_src_2.31/string/argz-insert.c' l='30' ll='62' type='error_t __argz_insert(char ** argz, size_t * argz_len, char * before, const char * entry)'/>
<use f='glibc_src_2.31/string/argz-insert.c' l='63' c='argz_insert'/>
<doc f='glibc_src_2.31/string/argz-insert.c' l='24'>/* Insert ENTRY into ARGZ &amp; ARGZ_LEN before BEFORE, which should be an
   existing entry in ARGZ; if BEFORE is NULL, ENTRY is appended to the end.
   Since ARGZ&apos;s first entry is the same as ARGZ, argz_insert (ARGZ, ARGZ_LEN,
   ARGZ, ENTRY) will insert ENTRY at the beginning of ARGZ.  If BEFORE is not
   in ARGZ, EINVAL is returned, else if memory can&apos;t be allocated for the new
   ARGZ, ENOMEM is returned, else 0.  */</doc>
