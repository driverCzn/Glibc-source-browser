<def f='glibc_src_2.31/include/random-bits.h' l='30' ll='39' type='uint32_t random_bits()'/>
<use f='glibc_src_2.31/resolv/res_mkquery.c' l='119' u='c' c='__res_context_mkquery'/>
<doc f='glibc_src_2.31/include/random-bits.h' l='25'>/* Provides fast pseudo-random bits through clock_gettime.  It has unspecified
   starting time, nano-second accuracy, its randomness is significantly better
   than gettimeofday, and for mostly architectures it is implemented through
   vDSO instead of a syscall.  Since the source is a system clock, the upper
   bits will have less entropy. */</doc>
<use f='glibc_src_2.31/resolv/res_send.c' l='307' u='c' c='nameserver_offset'/>
<use f='glibc_src_2.31/sysdeps/posix/tempname.c' l='74' u='c' c='__gen_tempname'/>
<use f='glibc_src_2.31/string/strfry.c' l='33' u='c' c='strfry'/>
