<dec f='glibc_src_2.31/include/unistd.h' l='30' type='int __euidaccess(const char * __name, int __type)'/>
<def f='glibc_src_2.31/sysdeps/posix/euidaccess.c' l='119' ll='181' type='int __euidaccess(const char * path, int mode)'/>
<use f='glibc_src_2.31/sysdeps/posix/euidaccess.c' l='185' c='euidaccess'/>
<use f='glibc_src_2.31/sysdeps/posix/euidaccess.c' l='186' c='eaccess'/>
<doc f='glibc_src_2.31/sysdeps/posix/euidaccess.c' l='113'>/* Return 0 if the user has permission of type MODE on file PATH;
   otherwise, return -1 and set `errno&apos; to EACCESS.
   Like access, except that it uses the effective user and group
   id&apos;s instead of the real ones, and it does not check for read-only
   filesystem, text busy, etc. */</doc>
