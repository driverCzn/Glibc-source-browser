<dec f='glibc_src_2.31/posix/regcomp.c' l='59' type='Idx fetch_number(re_string_t * input, re_token_t * token, reg_syntax_t syntax)'/>
<use f='glibc_src_2.31/posix/regcomp.c' l='2534' u='c' c='parse_dup_op'/>
<use f='glibc_src_2.31/posix/regcomp.c' l='2550' u='c' c='parse_dup_op'/>
<def f='glibc_src_2.31/posix/regcomp.c' l='3754' ll='3774' type='Idx fetch_number(re_string_t * input, re_token_t * token, reg_syntax_t syntax)'/>
<doc f='glibc_src_2.31/posix/regcomp.c' l='3748'>/* This is intended for the expressions like &quot;a{1,3}&quot;.
   Fetch a number from &apos;input&apos;, and return the number.
   Return -1 if the number field is empty like &quot;{,1}&quot;.
   Return RE_DUP_MAX + 1 if the number field is too large.
   Return -2 if an error occurred.  */</doc>
