<def f='glibc_src_2.31/sysdeps/unix/sysv/linux/malloc-sysdep.h' l='33' ll='57' type='_Bool check_may_shrink_heap()'/>
<doc f='glibc_src_2.31/sysdeps/unix/sysv/linux/malloc-sysdep.h' l='22'>/* The Linux kernel overcommits address space by default and if there is not
   enough memory available, it uses various parameters to decide the process to
   kill.  It is however possible to disable or curb this overcommit behavior
   by setting the proc sysctl vm.overcommit_memory to the value &apos;2&apos; and with
   that, a process is only allowed to use the maximum of a pre-determined
   fraction of the total address space.  In such a case, we want to make sure
   that we are judicious with our heap usage as well, and explicitly give away
   the freed top of the heap to reduce our commit charge.  See the proc(5) man
   page to know more about overcommit behavior.

   Other than that, we also force an unmap in a secure exec.  */</doc>
<use f='glibc_src_2.31/malloc/arena.c' l='569' u='c' c='shrink_heap'/>
