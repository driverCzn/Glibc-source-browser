<dec f='glibc_src_2.31/include/sys/wait.h' l='13' type='__pid_t __wait3(int * __stat_loc, int __options, struct rusage * __usage)'/>
<def f='glibc_src_2.31/posix/wait3.c' l='26' ll='30' type='__pid_t __wait3(int * stat_loc, int options, struct rusage * usage)'/>
<use f='glibc_src_2.31/posix/wait3.c' l='32' c='wait3'/>
<doc f='glibc_src_2.31/posix/wait3.c' l='21'>/* Wait for a child to exit.  When one does, put its status in *STAT_LOC and
   return its process ID.  For errors return (pid_t) -1.  If USAGE is not nil,
   store information about the child&apos;s resource usage (as a `struct rusage&apos;)
   there.  If the WUNTRACED bit is set in OPTIONS, return status for stopped
   children; otherwise don&apos;t.  */</doc>
