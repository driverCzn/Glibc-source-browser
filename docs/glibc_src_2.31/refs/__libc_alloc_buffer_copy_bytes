<dec f='glibc_src_2.31/include/alloc_buffer.h' l='349' type='struct alloc_buffer __libc_alloc_buffer_copy_bytes(struct alloc_buffer , const void * , size_t )'/>
<use f='glibc_src_2.31/include/alloc_buffer.h' l='359' u='c' c='alloc_buffer_copy_bytes'/>
<dec f='glibc_src_2.31/include/alloc_buffer.h' l='383' type='struct alloc_buffer __libc_alloc_buffer_copy_bytes(struct alloc_buffer , const void * , size_t )'/>
<use f='glibc_src_2.31/include/alloc_buffer.h' l='383' c='__libc_alloc_buffer_copy_bytes'/>
<doc f='glibc_src_2.31/include/alloc_buffer.h' l='348'>/* Internal function.  See alloc_buffer_copy_bytes below.  */</doc>
<def f='glibc_src_2.31/malloc/alloc_buffer_copy_bytes.c' l='25' ll='33' type='struct alloc_buffer __libc_alloc_buffer_copy_bytes(struct alloc_buffer buf, const void * src, size_t len)'/>
<doc f='glibc_src_2.31/malloc/alloc_buffer_copy_bytes.c' l='23'>/* This function works on a copy of the buffer object, so that it can
   remain non-addressable in the caller.  */</doc>
<use f='glibc_src_2.31/malloc/alloc_buffer_copy_string.c' l='28' u='c' c='__libc_alloc_buffer_copy_string'/>
