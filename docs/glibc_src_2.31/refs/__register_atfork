<dec f='glibc_src_2.31/sysdeps/nptl/libc-lockP.h' l='311' type='int __register_atfork(void (*)(void) __prepare, void (*)(void) __parent, void (*)(void) __child, void * __dso_handle)'/>
<doc f='glibc_src_2.31/sysdeps/nptl/libc-lockP.h' l='308'>/* Register handlers to execute before and after `fork&apos;.  Note that the
   last parameter is NULL.  The handlers registered by the libc are
   never removed so this is OK.  */</doc>
<dec f='glibc_src_2.31/sysdeps/nptl/fork.h' l='62' type='int __register_atfork(void (*)(void) __prepare, void (*)(void) __parent, void (*)(void) __child, void * dso_handle)'/>
<dec f='glibc_src_2.31/sysdeps/nptl/fork.h' l='66' type='int __register_atfork(void (*)(void) , void (*)(void) , void (*)(void) , void * )'/>
<use f='glibc_src_2.31/sysdeps/nptl/fork.h' l='66' c='__register_atfork'/>
<use f='glibc_src_2.31/nptl/libc_pthread_init.c' l='48' u='c' c='__libc_pthread_init'/>
<doc f='glibc_src_2.31/sysdeps/nptl/fork.h' l='61'>/* C library side function to register new fork handlers.  */</doc>
<use f='glibc_src_2.31/nptl/pthread_atfork.c' l='51' u='c' c='__dyn_pthread_atfork'/>
<def f='glibc_src_2.31/nptl/register-atfork.c' l='36' ll='61' type='int __register_atfork(void (*)(void) prepare, void (*)(void) parent, void (*)(void) child, void * dso_handle)'/>
