<dec f='glibc_src_2.31/sysdeps/generic/ldsodefs.h' l='880' type='int _dl_catch_exception(struct dl_exception * exception, void (*)(void *) operate, void * args)'/>
<dec f='glibc_src_2.31/sysdeps/generic/ldsodefs.h' l='882' type='int _dl_catch_exception(struct dl_exception * , void (*)(void *) , void * )'/>
<use f='glibc_src_2.31/sysdeps/generic/ldsodefs.h' l='882' c='_dl_catch_exception'/>
<doc f='glibc_src_2.31/sysdeps/generic/ldsodefs.h' l='875'>/* Call OPERATE (ARGS).  If no error occurs, set *EXCEPTION to zero.
   Otherwise, store a copy of the raised exception in *EXCEPTION,
   which has to be freed by _dl_exception_free.  As a special case, if
   EXCEPTION is null, call OPERATE (ARGS) with exception handling
   disabled (so that exceptions are fatal).  */</doc>
<use f='glibc_src_2.31/elf/dl-close.c' l='297' u='c' c='_dl_close_worker'/>
<use f='glibc_src_2.31/elf/dl-deps.c' l='248' u='c' c='_dl_map_object_deps'/>
<use f='glibc_src_2.31/elf/dl-deps.c' l='303' u='c' c='_dl_map_object_deps'/>
<def f='glibc_src_2.31/elf/dl-error-skeleton.c' l='172' ll='219' type='int _dl_catch_exception(struct dl_exception * exception, void (*)(void *) operate, void * args)'/>
<use f='glibc_src_2.31/elf/dl-error-skeleton.c' l='227' u='c' c='_dl_catch_error'/>
<use f='glibc_src_2.31/elf/dl-open.c' l='758' u='c' c='dl_open_worker'/>
<use f='glibc_src_2.31/elf/dl-open.c' l='837' u='c' c='_dl_open'/>
<use f='glibc_src_2.31/elf/dl-sym.c' l='133' u='c' c='do_sym'/>
