<dec f='glibc_src_2.31/io/sys/stat.h' l='339' type='int mknodat(int __fd, const char * __path, __mode_t __mode, __dev_t __dev)'/>
<def f='glibc_src_2.31/io/sys/stat.h' l='490' ll='495' macro='1' type='int mknodat(int __fd, const char * __path, __mode_t __mode, __dev_t __dev)'/>
<doc f='glibc_src_2.31/io/sys/stat.h' l='336'>/* Like mknod, create a new device file with permission bits MODE and
   device number DEV.  But interpret relative PATH names relative to
   the directory associated with FD.  */</doc>
<def f='glibc_src_2.31/io/mknodat.c' l='48' ll='53' type='int mknodat(int fd, const char * path, mode_t mode, dev_t dev)'/>
<doc f='glibc_src_2.31/io/mknodat.c' l='39'>/* This definition is only used if inlining fails for this function; see
   the last page of &lt;sys/stat.h&gt;.  The real work is done by the `x&apos;
   function which is passed a version number argument.  We arrange in the
   makefile that when not inlined this function is always statically
   linked; that way a dynamically-linked executable always encodes the
   version number corresponding to the data structures it uses, so the `x&apos;
   functions in the shared library can adapt without needing to recompile
   all callers.  */</doc>
