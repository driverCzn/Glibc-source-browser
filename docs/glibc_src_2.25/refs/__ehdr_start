<dec f='glibc_src_2.25/csu/libc-start.c' l='170' type='const Elf64_Ehdr'/>
<use f='glibc_src_2.25/csu/libc-start.c' l='172' u='a' c='generic_start_main'/>
<use f='glibc_src_2.25/csu/libc-start.c' l='174' u='m' c='generic_start_main'/>
<use f='glibc_src_2.25/csu/libc-start.c' l='174' u='m' c='generic_start_main'/>
<use f='glibc_src_2.25/csu/libc-start.c' l='175' u='a' c='generic_start_main'/>
<use f='glibc_src_2.25/csu/libc-start.c' l='175' u='m' c='generic_start_main'/>
<use f='glibc_src_2.25/csu/libc-start.c' l='176' u='m' c='generic_start_main'/>
<doc f='glibc_src_2.25/csu/libc-start.c' l='164'>/* Starting from binutils-2.23, the linker will define the
         magic symbol __ehdr_start to point to our own ELF header
         if it is visible in a segment that also includes the phdrs.
         So we can set up _dl_phdr and _dl_phnum even without any
         information from auxv.  */</doc>
<dec f='glibc_src_2.25/elf/rtld.c' l='1354' type='const Elf64_Ehdr'/>
<use f='glibc_src_2.25/elf/rtld.c' l='1355' u='a' c='dl_main'/>
