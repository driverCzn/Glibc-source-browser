<def f='glibc_src_2.25/include/inline-hashtab.h' l='125' ll='178' type='int htab_expand(struct hashtab * htab, int (*)(void *) hash_fn)'/>
<use f='glibc_src_2.25/include/inline-hashtab.h' l='198' u='c' c='htab_find_slot'/>
<doc f='glibc_src_2.25/include/inline-hashtab.h' l='117'>/* The following function changes size of memory allocated for the
   entries and repeatedly inserts the table elements.  The occupancy
   of the table after the call will be about 50%.  Naturally the hash
   table must already exist.  Remember also that the place of the
   table entries is changed.  If memory allocation failures are allowed,
   this function will return zero, indicating that the table could not be
   expanded.  If all goes well, it will return a non-zero value.  */</doc>
