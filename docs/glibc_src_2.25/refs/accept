<dec f='glibc_src_2.25/socket/sys/socket.h' l='237' type='int accept(int __fd, __SOCKADDR_ARG __addr, socklen_t *restrict __addr_len)'/>
<doc f='glibc_src_2.25/socket/sys/socket.h' l='229'>/* Await a connection on socket FD.
   When a connection arrives, open a new socket to communicate with it,
   set *ADDR (which is *ADDR_LEN bytes long) to the address of the connecting
   peer and *ADDR_LEN to the address&apos;s actual length, and return the
   new socket&apos;s descriptor, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='glibc_src_2.25/inet/rcmd.c' l='275' u='c' c='rcmd_af'/>
<dec f='include/x86_64-linux-gnu/sys/socket.h' l='232' type='int accept(int __fd, __SOCKADDR_ARG __addr, socklen_t *restrict __addr_len)'/>
<doc f='include/x86_64-linux-gnu/sys/socket.h' l='224'>/* Await a connection on socket FD.
   When a connection arrives, open a new socket to communicate with it,
   set *ADDR (which is *ADDR_LEN bytes long) to the address of the connecting
   peer and *ADDR_LEN to the address&apos;s actual length, and return the
   new socket&apos;s descriptor, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
<use f='glibc_src_2.25/support/xaccept.c' l='28' u='c' c='xaccept'/>
