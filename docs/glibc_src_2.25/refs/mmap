<dec f='glibc_src_2.25/misc/sys/mman.h' l='57' type='void * mmap(void * __addr, size_t __len, int __prot, int __flags, int __fd, __off_t __offset)'/>
<use f='glibc_src_2.25/elf/cache.c' l='169' u='c' c='print_cache'/>
<use f='glibc_src_2.25/elf/cache.c' l='697' u='c' c='load_aux_cache'/>
<use f='glibc_src_2.25/elf/readlib.c' l='126' u='c' c='process_file'/>
<use f='glibc_src_2.25/elf/sprof.c' l='711' u='c' c='load_shobj'/>
<use f='glibc_src_2.25/elf/sprof.c' l='805' u='c' c='load_profdata'/>
<use f='glibc_src_2.25/iconv/iconv_charmap.c' l='180' u='c' c='charmap_conversion'/>
<use f='glibc_src_2.25/iconv/iconv_prog.c' l='304' u='c' c='main'/>
<def f='glibc_src_2.25/malloc/memusage.c' l='576' ll='624' type='void * mmap(void * start, size_t len, int prot, int flags, int fd, off_t offset)'/>
<doc f='glibc_src_2.25/malloc/memusage.c' l='574'>/* `mmap&apos; replacement.  We do not have to keep track of the size since
   `munmap&apos; will get it as a parameter.  */</doc>
<def f='glibc_src_2.25/sysdeps/unix/sysv/linux/wordsize-64/mmap.c' l='38' macro='1' type='void * mmap(void * , size_t , int , int , int , __off_t )'/>
<use f='glibc_src_2.25/nptl/allocatestack.c' l='510' u='c' c='allocate_stack'/>
<use f='glibc_src_2.25/nptl/sem_open.c' l='101' u='c' c='check_add_mapping'/>
<use f='glibc_src_2.25/nptl/sem_open.c' l='272' u='c' c='sem_open'/>
<use f='glibc_src_2.25/nscd/connections.c' l='580' u='c' c='nscd_init'/>
<use f='glibc_src_2.25/nscd/connections.c' l='751' u='c' c='nscd_init'/>
<use f='glibc_src_2.25/nss/makedb.c' l='810' u='c' c='print_database'/>
<use f='glibc_src_2.25/nss/nss_db/db-open.c' l='50' u='c' c='internal_setent'/>
<use f='glibc_src_2.25/support/support_record_failure.c' l='47' u='c' c='init'/>
<use f='glibc_src_2.25/support/xmmap.c' l='26' u='c' c='xmmap'/>
