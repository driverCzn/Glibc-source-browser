<dec f='glibc_src_2.25/bits/sysmacros.h' l='36'/>
<use f='glibc_src_2.25/misc/sys/sysmacros.h' l='73' u='c'/>
<use f='glibc_src_2.25/misc/sys/sysmacros.h' l='92' u='w'/>
<doc f='glibc_src_2.25/bits/sysmacros.h' l='26'>/* dev_t in glibc is a 64-bit quantity, with 32-bit major and minor numbers.
   Our default encoding is MMMM Mmmm mmmM MMmm, where M is a hex digit of
   the major number and m is a hex digit of the minor number.  This is
   downward compatible with legacy systems where dev_t is 16 bits wide,
   encoded as MMmm.  It is also downward compatible with the Linux kernel,
   which (as of 2016) uses 32-bit dev_t, encoded as mmmM MMmm.

   Systems that use an incompatible encoding for dev_t should override this
   file in the appropriate sysdeps subdirectory.  */</doc>
<dec f='include/x86_64-linux-gnu/bits/sysmacros.h' l='36'/>
<use f='include/x86_64-linux-gnu/sys/sysmacros.h' l='73' u='c'/>
<use f='include/x86_64-linux-gnu/sys/sysmacros.h' l='92' u='w'/>
<doc f='include/x86_64-linux-gnu/bits/sysmacros.h' l='26'>/* dev_t in glibc is a 64-bit quantity, with 32-bit major and minor numbers.
   Our default encoding is MMMM Mmmm mmmM MMmm, where M is a hex digit of
   the major number and m is a hex digit of the minor number.  This is
   downward compatible with legacy systems where dev_t is 16 bits wide,
   encoded as MMmm.  It is also downward compatible with the Linux kernel,
   which (as of 2016) uses 32-bit dev_t, encoded as mmmM MMmm.

   Systems that use an incompatible encoding for dev_t should override this
   file in the appropriate sysdeps subdirectory.  */</doc>
