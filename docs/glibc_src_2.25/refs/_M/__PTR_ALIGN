<dec f='glibc_src_2.25/malloc/obstack.h' l='132'/>
<doc f='glibc_src_2.25/malloc/obstack.h' l='125'>/* Similar to _BPTR_ALIGN (B, P, A), except optimize the common case
   where pointers can be converted to integers, aligned as integers,
   and converted back again.  If PTR_INT_TYPE is narrower than a
   pointer (e.g., the AS/400), play it safe and compute the alignment
   relative to B.  Otherwise, use the faster strategy of computing the
   alignment relative to 0.  */</doc>
<use f='glibc_src_2.25/malloc/obstack.c' l='179' u='c'/>
<use f='glibc_src_2.25/malloc/obstack.c' l='227' u='c'/>
<use f='glibc_src_2.25/malloc/obstack.c' l='270' u='c'/>
<use f='glibc_src_2.25/malloc/obstack.c' l='297' u='c'/>
