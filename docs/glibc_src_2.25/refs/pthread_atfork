<dec f='glibc_src_2.25/sysdeps/nptl/pthread.h' l='1146' type='int pthread_atfork(void (*)(void) __prepare, void (*)(void) __parent, void (*)(void) __child)'/>
<doc f='glibc_src_2.25/sysdeps/nptl/pthread.h' l='1135'>/* Install handlers to be called when a new process is created with FORK.
   The PREPARE handler is called in the parent process just before performing
   FORK. The PARENT handler is called in the parent process just after FORK.
   The CHILD handler is called in the child process.  Each of the three
   handlers can be NULL, meaning that no handler needs to be called at that
   point.
   PTHREAD_ATFORK can be called several times, in which case the PREPARE
   handlers are called in LIFO order (last added with PTHREAD_ATFORK,
   first called before FORK), and the PARENT and CHILD handlers are called
   in FIFO (first added, first called).  */</doc>
<dec f='glibc_src_2.25/nptl/pthread_atfork.c' l='58' type='int pthread_atfork(void (*)(void) prepare, void (*)(void) parent, void (*)(void) child)'/>
<def f='glibc_src_2.25/nptl/pthread_atfork.c' l='60' macro='1' type='int pthread_atfork(void (*)(void) , void (*)(void) , void (*)(void) )'/>
<use f='glibc_src_2.25/sysdeps/unix/sysv/linux/mq_notify.c' l='198' u='c' c='init_mq_netlink'/>
<use f='glibc_src_2.25/sysdeps/unix/sysv/linux/timer_routines.c' l='190' u='c' c='__start_helper_thread'/>
