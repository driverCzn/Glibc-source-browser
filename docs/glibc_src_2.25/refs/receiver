<def f='glibc_src_2.25/elf/dl-error-skeleton.c' l='76' type='receiver_fct'/>
<use f='glibc_src_2.25/elf/dl-error-skeleton.c' l='156' u='r' c='_dl_signal_cerror'/>
<use f='glibc_src_2.25/elf/dl-error-skeleton.c' l='158' u='r' c='_dl_signal_cerror'/>
<use f='glibc_src_2.25/elf/dl-error-skeleton.c' l='163' u='r' c='_dl_signal_cerror'/>
<use f='glibc_src_2.25/elf/dl-error-skeleton.c' l='219' u='r' c='_dl_receive_error'/>
<use f='glibc_src_2.25/elf/dl-error-skeleton.c' l='223' u='w' c='_dl_receive_error'/>
<use f='glibc_src_2.25/elf/dl-error-skeleton.c' l='228' u='w' c='_dl_receive_error'/>
<doc f='glibc_src_2.25/elf/dl-error-skeleton.c' l='69'>/* This points to a function which is called when an continuable error is
   received.  Unlike the handling of `catch&apos; this function may return.
   The arguments will be the `errstring&apos; and `objname&apos;.

   Since this functionality is not used in normal programs (only in ld.so)
   we do not care about multi-threaded programs here.  We keep this as a
   global variable.  */</doc>
