<dec f='glibc_src_2.25/nptl/pthreadP.h' l='356' type='void __reclaim_stacks()'/>
<doc f='glibc_src_2.25/nptl/pthreadP.h' l='354'>/* Mark all the stacks except for the current one as available.  This
   function also re-initializes the lock for the stack cache.  */</doc>
<use f='glibc_src_2.25/nptl/nptl-init.c' l='463' u='r' c='__pthread_initialize_minimal_internal'/>
<def f='glibc_src_2.25/nptl/allocatestack.c' l='828' ll='930' type='void __reclaim_stacks()'/>
<doc f='glibc_src_2.25/nptl/allocatestack.c' l='824'>/* In case of a fork() call the memory allocation in the child will be
   the same but only one thread is running.  All stacks except that of
   the one running thread are not used anymore.  We have to recycle
   them.  */</doc>
