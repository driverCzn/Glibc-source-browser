<dec f='glibc_src_2.25/sysdeps/unix/sysv/linux/sys/epoll.h' l='138' type='int epoll_pwait(int __epfd, struct epoll_event * __events, int __maxevents, int __timeout, const __sigset_t * __ss)'/>
<def f='glibc_src_2.25/sysdeps/unix/sysv/linux/epoll_pwait.c' l='38' ll='44' type='int epoll_pwait(int epfd, struct epoll_event * events, int maxevents, int timeout, const sigset_t * set)'/>
<doc f='glibc_src_2.25/sysdeps/unix/sysv/linux/epoll_pwait.c' l='28'>/* Wait for events on an epoll instance &quot;epfd&quot;. Returns the number of
   triggered events returned in &quot;events&quot; buffer. Or -1 in case of
   error with the &quot;errno&quot; variable set to the specific error code. The
   &quot;events&quot; parameter is a buffer that will contain triggered
   events. The &quot;maxevents&quot; is the maximum number of events to be
   returned ( usually size of &quot;events&quot; ). The &quot;timeout&quot; parameter
   specifies the maximum wait time in milliseconds (-1 == infinite).
   The thread&apos;s signal mask is temporarily and atomically replaced with
   the one provided as parameter.  */</doc>
<doc f='glibc_src_2.25/sysdeps/unix/sysv/linux/sys/epoll.h' l='133'>/* Same as epoll_wait, but the thread&apos;s signal mask is temporarily
   and atomically replaced with the one provided as parameter.

   This function is a cancellation point and therefore not marked with
   __THROW.  */</doc>
