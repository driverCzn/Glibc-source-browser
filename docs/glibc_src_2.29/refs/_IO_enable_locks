<dec f='glibc_src_2.29/libio/libioP.h' l='423' type='void _IO_enable_locks()'/>
<dec f='glibc_src_2.29/libio/libioP.h' l='424' type='void _IO_enable_locks()'/>
<use f='glibc_src_2.29/libio/libioP.h' l='424' c='_IO_enable_locks'/>
<def f='glibc_src_2.29/libio/genops.c' l='516' ll='526' type='void _IO_enable_locks()'/>
<doc f='glibc_src_2.29/libio/genops.c' l='505'>/* In a single-threaded process most stdio locks can be omitted.  After
   _IO_enable_locks is called, locks are not optimized away any more.
   It must be first called while the process is still single-threaded.

   This lock optimization can be disabled on a per-file basis by setting
   _IO_FLAGS2_NEED_LOCK, because a file can have user-defined callbacks
   or can be locked with flockfile and then a thread may be created
   between a lock and unlock, so omitting the lock is not valid.

   Here we have to make sure that the flag is set on all existing files
   and files created later.  */</doc>
<use f='glibc_src_2.29/nptl/pthread_create.c' l='758' u='c' c='__pthread_create_2_1'/>
