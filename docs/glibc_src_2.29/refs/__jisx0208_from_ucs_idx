<dec f='glibc_src_2.29/iconvdata/jis0208.h' l='43' type='const struct jisx0208_ucs_idx []'/>
<use f='glibc_src_2.29/iconvdata/jis0208.h' l='91' u='r' c='ucs4_to_jisx0208'/>
<def f='glibc_src_2.29/iconvdata/jis0208.c' l='1897' ll='2607' type='const struct jisx0208_ucs_idx [708]'/>
<doc f='glibc_src_2.29/iconvdata/jis0208.c' l='1867'>/* The mapping of all the other UCS values is quite difficult since they
   are distributed from 0x2010 upto to 0xffe5.  There are many gaps with
   unpredictable place and size.  Therefore we use a table which maps
   ranges to idexes in a table.  This table ca be generated with:

   egrep &apos;^0x&apos; &lt; .../eastasia/jis/jis0208.txt | awk &apos;{ print $3, $2}&apos; |
   egrep &apos;^0x[^01]&apos; | sort -u | perl tab.pl

   where tab.pl is

   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   $first=$last=$idx=0;
   while (&lt;&gt;) {
     local($ucs,$jis,%rest) = split;
     local($u)=hex($ucs);
     if ($u - $last &gt; 6) {
       if ($last != 0) {
	 printf (&quot; { .start = %#06x, .end = %#06x, .idx = %5d },\n&quot;,
		 $first, $last, $idx);
	 $idx += $last - $first + 1;
       }
       $first=$u;
     }
     $last=$u;
   }
   printf (&quot; { .start = %#06x, .end = %#06x, .idx = %5d }\n&quot;,
	   $first, $last, $idx);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/</doc>
