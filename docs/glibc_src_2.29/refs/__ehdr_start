<dec f='glibc_src_2.29/csu/libc-start.c' l='176' type='const Elf64_Ehdr'/>
<use f='glibc_src_2.29/csu/libc-start.c' l='178' u='a' c='__libc_start_main'/>
<use f='glibc_src_2.29/csu/libc-start.c' l='180' u='m' c='__libc_start_main'/>
<use f='glibc_src_2.29/csu/libc-start.c' l='180' u='m' c='__libc_start_main'/>
<use f='glibc_src_2.29/csu/libc-start.c' l='181' u='a' c='__libc_start_main'/>
<use f='glibc_src_2.29/csu/libc-start.c' l='181' u='m' c='__libc_start_main'/>
<use f='glibc_src_2.29/csu/libc-start.c' l='182' u='m' c='__libc_start_main'/>
<doc f='glibc_src_2.29/csu/libc-start.c' l='170'>/* Starting from binutils-2.23, the linker will define the
         magic symbol __ehdr_start to point to our own ELF header
         if it is visible in a segment that also includes the phdrs.
         So we can set up _dl_phdr and _dl_phnum even without any
         information from auxv.  */</doc>
<dec f='glibc_src_2.29/elf/rtld.c' l='1364' type='const Elf64_Ehdr'/>
<use f='glibc_src_2.29/elf/rtld.c' l='1365' u='a' c='dl_main'/>
