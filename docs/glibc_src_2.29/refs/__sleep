<dec f='glibc_src_2.29/include/unistd.h' l='68' type='unsigned int __sleep(unsigned int __seconds)'/>
<use f='glibc_src_2.29/argp/argp-parse.c' l='152' u='c' c='argp_default_parser'/>
<use f='glibc_src_2.29/inet/rcmd.c' l='223' u='c' c='rcmd_af'/>
<use f='glibc_src_2.29/inet/rexec.c' l='98' u='c' c='rexec_af'/>
<def f='glibc_src_2.29/sysdeps/posix/sleep.c' l='32' ll='65' type='unsigned int __sleep(unsigned int seconds)'/>
<use f='glibc_src_2.29/sysdeps/posix/sleep.c' l='66' c='sleep'/>
<doc f='glibc_src_2.29/sysdeps/posix/sleep.c' l='25'>/* Make the process sleep for SECONDS seconds, or until a signal arrives
   and is not ignored.  The function returns the number of seconds less
   than SECONDS which it actually slept (zero if it slept the full time).
   If a signal handler does a `longjmp&apos; or modifies the handling of the
   SIGALRM signal while inside `sleep&apos; call, the handling of the SIGALRM
   signal afterwards is undefined.  There is no return value to indicate
   error, but if `sleep&apos; returns SECONDS, it probably didn&apos;t work.  */</doc>
