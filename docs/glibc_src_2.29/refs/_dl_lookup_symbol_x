<dec f='glibc_src_2.29/sysdeps/generic/ldsodefs.h' l='912' type='lookup_t _dl_lookup_symbol_x(const char * undef, struct link_map * undef_map, const Elf64_Sym ** sym, struct r_scope_elem ** symbol_scope, const struct r_found_version * version, int type_class, int flags, struct link_map * skip_map)'/>
<doc f='glibc_src_2.29/sysdeps/generic/ldsodefs.h' l='911'>/* Lookup versioned symbol.  */</doc>
<use f='glibc_src_2.29/sysdeps/unix/sysv/linux/dl-vdso.c' l='39' macro='1' u='c' c='_dl_vdso_vsym'/>
<use f='glibc_src_2.29/elf/dl-runtime.c' l='112' u='c' c='_dl_fixup'/>
<use f='glibc_src_2.29/elf/dl-runtime.c' l='257' u='c' c='_dl_profile_fixup'/>
<use f='glibc_src_2.29/sysdeps/x86_64/tlsdesc.c' l='69' u='c' c='_dl_tlsdesc_resolve_rela_fixup'/>
<use f='glibc_src_2.29/elf/dl-libc.c' l='106' macro='1' u='c' c='do_dlsym'/>
<use f='glibc_src_2.29/elf/dl-libc.c' l='117' macro='1' u='c' c='do_dlvsym'/>
<use f='glibc_src_2.29/elf/dl-libc.c' l='168' macro='1' u='c' c='do_dlsym_private'/>
<def f='glibc_src_2.29/elf/dl-lookup.c' l='785' ll='930' type='lookup_t _dl_lookup_symbol_x(const char * undef_name, struct link_map * undef_map, const Elf64_Sym ** ref, struct r_scope_elem ** symbol_scope, const struct r_found_version * version, int type_class, int flags, struct link_map * skip_map)'/>
<use f='glibc_src_2.29/elf/dl-lookup.c' l='914' u='c' c='_dl_lookup_symbol_x'/>
<doc f='glibc_src_2.29/elf/dl-lookup.c' l='779'>/* Search loaded objects&apos; symbol tables for a definition of the symbol
   UNDEF_NAME, perhaps with a requested version for the symbol.

   We must never have calls to the audit functions inside this function
   or in any function which gets called.  If this would happen the audit
   code might create a thread which can throw off all the scope locking.  */</doc>
<use f='glibc_src_2.29/elf/rtld.c' l='282'/>
<use f='glibc_src_2.29/elf/rtld.c' l='282'/>
<use f='glibc_src_2.29/elf/rtld.c' l='613' u='c' c='lookup_doit'/>
<use f='glibc_src_2.29/elf/rtld.c' l='1922' u='c' c='dl_main'/>
