<def f='include/c++/7/type_traits' l='970' ll='978'/>
<ovr f='include/c++/7/type_traits' l='981' c='std::__is_direct_constructible_impl'/>
<use f='include/c++/7/type_traits' l='982'/>
<size>1</size>
<doc f='include/c++/7/type_traits' l='965'>// Implementation for non-reference types. To meet the proper
  // variable definition semantics, we also need to test for
  // is_destructible in this case.
  // This form should be simplified by a single expression:
  // ::delete ::new _Tp(declval&lt;_Arg&gt;()), see c++/51222.</doc>
<fun r='_ZNSt33__do_is_direct_constructible_impl6__testEi'/>
<fun r='_ZNSt33__do_is_direct_constructible_impl6__testEz'/>
